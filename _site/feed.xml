<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rubem Mota</title>
    <description>Personal Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 20 Jun 2020 13:08:22 +0100</pubDate>
    <lastBuildDate>Sat, 20 Jun 2020 13:08:22 +0100</lastBuildDate>
    <generator>Jekyll v4.1.0</generator>
    
      <item>
        <title>Migração de SVN para GIT</title>
        <description>&lt;p&gt;Recentemente foi-me lançado o desafio de migrar um servidor de svn para git , e comecei logo a procura de importações directas,
sendo que encontrei sugestões tais como o  &lt;a href=&quot;https://github.com/nirvdrum/svn2git/&quot; title=&quot;svn2git&quot;&gt;svn2git&lt;/a&gt; e &lt;a href=&quot;http://subgit.com/,&amp;quot;subit&amp;quot;&quot;&gt;subGit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No entanto não se adequavam ao que se pretendia fazer, então após mais alguma pesquisa, encontrei várias referências a um comando do git que permitia
clonar um repositório de SVN para Git e conseguir &lt;strong&gt;manter o histórico&lt;/strong&gt; do mesmo sem configuraçoes extra ou programa externos. O comando em causa é o&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git svn clone http://svn/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Atráves deste comando é efectuado um pedido ao servidor de svn e será criada uma nova directória para o repositório em causa, sendo que este comando tem a possibilidade de aceitar os parametros que podem ser passados para os &lt;strong&gt;init&lt;/strong&gt; e &lt;strong&gt;fetch&lt;/strong&gt; da utilização de git.
No entanto de nada nos serve um clone de um
repositório sem os logs e o mapeamento dos autores dos commits para o sistema que está a ser utilizado. Para tal basta utilizar os seguintes comandos.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;svn log &lt;span class=&quot;nt&quot;&gt;--xml&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;author&amp;gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; | perl &lt;span class=&quot;nt&quot;&gt;-pe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/.*&amp;gt;(.*?)&amp;lt;.*/$1 = /'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tee &lt;/span&gt;users.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este primeiro comando deverá ser executado no servidor de svn actual , com este comando será possivel gerar um ficheiro com as informações relativas a todos
os autores de commits do svn em causa. Este ficheiro será utilizado como ficheiro de mapeamento de migração de commits e logs para o Git.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git svn clone &lt;span class=&quot;nt&quot;&gt;--stdlayout&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-metadata&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--authors-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;users.txt svn://hostname/path dest_dir-tmp&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este segundo comando irá fazer clone do repositório no servidor de SVN e irá criar um repositório de Git local, com a informação de todos os commits e logs deste novo repositório.
Será necessário ainda especificar o &lt;strong&gt;remote origin&lt;/strong&gt; que iremos utilizar para todas as ações futuras , para tal basta executar os seguintes comandos:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git remote add origin git@server:user/project-name.git
git push origin &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A partir deste momento será possivel sincronizar o repositório migrado com o servidor de Git.&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Jul 2017 22:16:06 +0100</pubDate>
        <link>http://localhost:4000/git/svn/dicas/2017/07/20/migrate-from-svn-to-git.html</link>
        <guid isPermaLink="true">http://localhost:4000/git/svn/dicas/2017/07/20/migrate-from-svn-to-git.html</guid>
        
        
        <category>git</category>
        
        <category>svn</category>
        
        <category>dicas</category>
        
      </item>
    
      <item>
        <title>De volta a escrita</title>
        <description>&lt;p&gt;Ora viva,&lt;/p&gt;

&lt;p&gt;Já faz algum tempo que andava afastado deste mundo dos blogs e companhia, e achei
que estava na hora de voltar a fazer um projecto do género.
Este projecto vai server como um repositório de experiencias e dicas na área de programaçao e sistemas.&lt;/p&gt;

&lt;p&gt;Mas como todos os primeiros artigos/posts numa comunidade web, irei fazer uma pequena apresentaçao.&lt;/p&gt;

&lt;p&gt;Tenho neste momento 27 anos , e sou programador numa empresa que faz desenvolvimento para &lt;strong&gt;SAP&lt;/strong&gt;.
Tenho desenvolvido nos ultimos anos em &lt;strong&gt;PHP&lt;/strong&gt; , &lt;strong&gt;Javascript&lt;/strong&gt;, &lt;strong&gt;Mysql/Mongodb&lt;/strong&gt;, sendo que este ano
tenho aprofundado mais os meus conhecimentos em &lt;strong&gt;c#/vb.net&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Além da área de programação, tambem tenho experiencia em gestão de servidores Linux,
mais concretamente com as distribuições Debian/Arch/Fedora.&lt;/p&gt;

&lt;p&gt;No meu tempo livre sou praticante de Karaté e bombeiro voluntário.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Jul 2017 22:16:06 +0100</pubDate>
        <link>http://localhost:4000/2017/07/17/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/17/welcome-to-jekyll.html</guid>
        
        
      </item>
    
      <item>
        <title>Converter Debian Wheezy para Debian Testing</title>
        <description>&lt;p&gt;Com o recente lançamento do Debian como versão final , foi anunciada a versão 8 desta distribuição.
A versão 8 desta distribuição terá o codename de “Jessie” e será lançado durante 2015. Parassá os repositórios do Debian Jessie ainda estão com os pacotes que estão disponiveis para o Debian Wheezy , sendo que parassá os pacotes disponíveis no repo Security-updates do Jessie ainda não estão a ser mantidas pela equipa oficial do debian.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-R-IkMedx9EE/UYYcktIrKFI/AAAAAAAADJw/0OkXQUJRuMY/s635/debian_logo1.jpg&quot; alt=&quot;&amp;quot;debian logo&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Feita esta pequena apresentação do Jessie , vou explicar como actualizar o Debian Wheezy para Debian Jessie.&lt;/p&gt;

&lt;p&gt;Como primeiro passo é necessário editar o ficheiro  &lt;strong&gt;/etc/apt/sources.lists&lt;/strong&gt; como root e colocar as seguintes entradas no ficheiro:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;deb ftp://ftp.uk.debian.org/debian/ jessie main contrib non-free
deb ftp://ftp.uk.debian.org/debian/ jessie-proposed-updates main contrib non-free
deb-src ftp://ftp.uk.debian.org/debian/ jessie main contrib non-free
deb-src ftp://ftp.uk.debian.org/debian/ jessie-proposed-updates main contrib non-free&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;No entanto é necessário verificar que não existe nenhuma entrada referente a versões anteriores.&lt;/em&gt;&lt;/strong&gt;
Após este passo é necessário atualizar a lista de repositórios , para tal basta executar o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por fim é necessário actualizar o sistema , no entanto como se vai atualizar o sistema para uma versão acima , será necessário executar o comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get dist-upgrade&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sun, 12 May 2013 17:46:49 +0100</pubDate>
        <link>http://localhost:4000/tutorial/debian/2013/05/12/converter-debian-wheezy-para-debian-testing.html</link>
        <guid isPermaLink="true">http://localhost:4000/tutorial/debian/2013/05/12/converter-debian-wheezy-para-debian-testing.html</guid>
        
        
        <category>Tutorial</category>
        
        <category>Debian</category>
        
      </item>
    
      <item>
        <title>Instalação do yaourt em ArchLinux</title>
        <description>&lt;p&gt;Como utilizador de archlinux já há uns anos , surgiu a necessidade de instalar pacotes que estão disponíveis no AUR . No entanto instalar software que está disponível no AUR pode ser um pouco demoroso e tive necessidade de encontrar uma alternativa viável que me pudesse gerir as instalações a partir do AUR como a partir dos repos oficiais.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.archlinux.org/static/logos/archlinux-logo-dark-90dpi.ebdee92a15b3.png&quot; alt=&quot;&amp;quot;arch logo&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como tal encontrei o software yaourt que funciona como gestor de pacotes.Umas das principais mais valias deste gestor de pacotes é que dá para gerir de forma centralizada a instalação dos pacotes tanto de repos AUR como de repos oficias.&lt;/p&gt;

&lt;p&gt;Como tal vou deixar aqui um pequeno tutorial de como instalar este software e algumas dicas de utilização. Inicialmente será necessário editar o ficheiro &lt;strong&gt;/etc/pacman.conf&lt;/strong&gt; e adicionar as seguintes entradas:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;archlinuxfr]
  SigLevel &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Never
  Server &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; http://repo.archlinux.fr/&lt;span class=&quot;nv&quot;&gt;$arch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Após este passo iremos actualizar o sistema e instalar o yaourt ,para tal basta correr o seguinte comando como root:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-Sy&lt;/span&gt; yaourt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;E pronto temos o yaourt instalado =) simples não foi ?
Agora irei deixar alguns exemplos de utilização do mesmo. Para fazer pesquisa e instalação de um pacote basta executar o comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &amp;lt;pesquisa&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter&quot; alt=&quot;&quot; src=&quot;http://archlinux.fr/wp-content/uploads/2007/06/yaourt_2.png&quot; width=&quot;686&quot; height=&quot;169&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para sincronizar as bases de dados , actualizar e fazer pesquisas no aur basta executar o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &lt;span class=&quot;nt&quot;&gt;-Syu&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--devel&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--aur&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Caso queira actualizar só o sistema e o aur fazem&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &lt;span class=&quot;nt&quot;&gt;-Syua&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para compilar um pacote atravez do código fonte podem utilizar o comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &lt;span class=&quot;nt&quot;&gt;-Sb&lt;/span&gt; &amp;lt;pacote&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Estes são dos comandos mais utilizados , no entanto existe um leque enorme de possiveis comandos que podem ser executados. De referir ainda que devem executar o yaourt sempre como utilizador “normal” visto que durante a instalação dos pacotes será sempre pedida a vossa password , desta forma irão ter mais controlo sobre o que está a ser instalado.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 May 2013 17:28:59 +0100</pubDate>
        <link>http://localhost:4000/archlinux/tutorial/2013/05/12/instalacao-yaourt-em-archlinux.html</link>
        <guid isPermaLink="true">http://localhost:4000/archlinux/tutorial/2013/05/12/instalacao-yaourt-em-archlinux.html</guid>
        
        
        <category>Archlinux</category>
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>[Script]Gerir VirtualHosts do Apache</title>
        <description>&lt;p&gt;Ora boas tardes,&lt;/p&gt;

&lt;p&gt;Depois de algum tempo sem escrever nada no blog , trago-vos um script em perl acabado de sair do forno que nos permite adicionar , remover , listar , verificar , desativar os nossos virtualhosts.&lt;/p&gt;

&lt;p&gt;Para tal temos temos ao nosso dispor as seguintes opções:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-add&lt;/strong&gt; : para adicionar um virtualhost no apache , para tal basta usar a seguinte sintax:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-add&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-add&lt;/span&gt; www.rubemlrm.com rubemlrm &lt;span class=&quot;c&quot;&gt;#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-rem&lt;/strong&gt;: para remover um virtualhost no apache, para tal basta usar a seguinte sintax:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-rem&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-rem&lt;/span&gt; www.rubemlrm.com &lt;span class=&quot;c&quot;&gt;#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-dis&lt;/strong&gt; : para desativar um virtualhost no apache , para tal basta usar a seguinte syntax:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-dis&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-dis&lt;/span&gt; www.rubemlrm.com &lt;span class=&quot;c&quot;&gt;#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-c&lt;/strong&gt; :Esta opção poderá receber um argumento que é o &lt;url&gt; para mostrar a informação do virtualhost , caso não se passe o argumento do url irá mostrar todos os .conf que estão na diretoria /etc/apache2/sites-enabled/. Para tal basta usar a seguinte sintax:&lt;/url&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#irá listar todos os .conf da directoria&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt; 
ou&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; www.rubemlrm.com &lt;span class=&quot;c&quot;&gt;#para mostrar o conteudo do .conf deste url&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-h&lt;/strong&gt; : Por fim temos esta opção para nos mostrar os comandos que temos disponíveis.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;./apache &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;De seguida fica o código do script:
true&lt;script src=&quot;https://gist.github.com/rubemlrm/3387796.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Aug 2012 16:07:32 +0100</pubDate>
        <link>http://localhost:4000/2012/08/18/scriptgerir-virtualhosts-no-apache.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/08/18/scriptgerir-virtualhosts-no-apache.html</guid>
        
        
      </item>
    
      <item>
        <title>Verificar m&amp;aacute;quinas de rede</title>
        <description>&lt;p&gt;Boas noites, depois de algum tempo sem postar aqui nada devido a escola .Deixo aqui um pequeno script em perl que permite testar as máquinas de rede para ver quais é que estão ativas na nossa rede informática. Para tal é preciso ter um ficheiro com os ips que queremos testar e o script trata do resto sozinho.&lt;/p&gt;

&lt;div class=&quot;language-perl highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Net::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;autodie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$my_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;ip&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;date +%a%d%m%y%k%M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;ficheiro com ips&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@ips&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@ips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Net::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Ping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#print &quot;$host -&amp;gt; está activo.n&quot;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -&amp;gt; está activo.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#print &quot;$host -&amp;gt; está offlinen&quot;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -&amp;gt; está offline.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Reporte da lista&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#para um ficheiro a ser enviado por mail&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;gt;../logs/'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$date_machine_networking_report&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 16 Mar 2012 21:06:07 +0000</pubDate>
        <link>http://localhost:4000/2012/03/16/verificar-maquinas-de-rede.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/03/16/verificar-maquinas-de-rede.html</guid>
        
        
      </item>
    
      <item>
        <title>Verificar se utilizador existe</title>
        <description>&lt;p&gt;Boas noites&lt;/p&gt;
&lt;p&gt;Desta vez venho apresentar mais um pequeno script feito por mim.Este script tem como fundamento verificar se um utilizador existe ou não no sistema Linux e se existir alem de nos mostrar uma mensagem a dizer que existe ainda vai identificar o UID desse utilizador.Caso contrário vai mostrar uma mensagem de erro a dizer que o utilizador não existe.Atenção não foram utilizados comandos bash por isso é tudo perl scripting.&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-398&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;#!/usr/bin/perl&lt;br /&gt;
use warnings;&lt;br /&gt;
use strict;&lt;br /&gt;
my @finalusers;&lt;br /&gt;
my $utilizador;&lt;br /&gt;
my $statuscode = 0;&lt;br /&gt;
my $uid;&lt;/p&gt;
&lt;p&gt;#Analise se foi intruzido um nome ou não&lt;br /&gt;
if(@ARGV != 1){die &quot;Argumento inválido&quot;;}&lt;br /&gt;
chomp($utilizador = $ARGV[0]);&lt;/p&gt;
&lt;p&gt;open(FILE, &quot;/etc/passwd&quot;) || die($!);&lt;br /&gt;
chomp(my @utilizadores = &lt;FILE&gt;);&lt;br /&gt;
close(FILE);&lt;br /&gt;
foreach my $date (@utilizadores){&lt;br /&gt;
chomp $date;&lt;br /&gt;
my @finalusers = split /:/, $date;&lt;br /&gt;
chomp(@finalusers);&lt;br /&gt;
if($finalusers[0] eq $utilizador){&lt;br /&gt;
$uid = $finalusers[2];&lt;br /&gt;
$statuscode++;&lt;br /&gt;
}&lt;br /&gt;
}&amp;lt;/p&amp;gt;
&lt;p&gt;if( $statuscode != 1){&lt;br /&gt;
print &quot;O $utilizador NÃO se encontra criado no sisteman&quot;;&lt;br /&gt;
}else{&lt;/p&gt;
&lt;p&gt;print &quot;o $utilizador JÁ se encontra criado no sistema! O seu UID é $uid !n&quot; ;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;/FILE&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Feb 2012 00:18:54 +0000</pubDate>
        <link>http://localhost:4000/2012/02/23/scriptverificar-se-utilizador-existe.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/02/23/scriptverificar-se-utilizador-existe.html</guid>
        
        
      </item>
    
      <item>
        <title>Sysadmin-toolbox</title>
        <description>&lt;p&gt;Depois de algum tempo a programar em perl , decidi &quot;que tal por as minhas capacidades a prova&quot; e construi um painel administrativo em perl para gerir sistemas.&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-214&quot;&gt;&lt;/a&gt;E depois de algumas horas a programar , tenho uma versão 1 pronta a utilizar ainda com poucas funcionalidades é certo , mas para já considero que tem as funcionalidades básicas já implementadas , tais como:&lt;/p&gt;
&lt;p&gt;-Adicionar/remover utilizadores;&lt;/p&gt;
&lt;p&gt;-Possibilidade de fazer backups dos dados de um utilizador que se vai apagar;&lt;/p&gt;
&lt;p&gt;-Gestão de crons;&lt;/p&gt;
&lt;p&gt;-Funcionalidade para testar os pcs da rede.De forma a ver quais estão online e quais não estão;&lt;/p&gt;
&lt;p&gt;-Funcionalidade para encontrar pastas vazias e ficar com um registo das mesmas;&lt;/p&gt;
&lt;p&gt;-Funcionalidade para ver quais são os processos que estão a gastar mais recursos&lt;/p&gt;
&lt;p&gt;-Funcionalidade para adicionar vários utilizadores a uma máquina de forma automática&lt;/p&gt;
&lt;p&gt;-Funcionalidade para encontrar ficheiros que tenham um tamanho superior ao indicado.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Este projecto está disponível no github a partir do seguinte link : &lt;a href=&quot;https://github.com/Rubemlrm/sysadmin-toolbox&quot;&gt;https://github.com/Rubemlrm/sysadmin-toolbox&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Para utilizar basta fazer download do projecto e configurar o ficheiro includes.pl que está na pasta includes , com o caminho correcto para o script.Espero que reportem possiveis bugs e sugestões =).&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Feb 2012 15:25:13 +0000</pubDate>
        <link>http://localhost:4000/2012/02/16/perllinuxsysadmin-toolbox.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/02/16/perllinuxsysadmin-toolbox.html</guid>
        
        
      </item>
    
      <item>
        <title>Reportar Directorias Vazias</title>
        <description>&lt;p&gt;Aqui fica um pequeno script para encontrar pastas vazias dentro de uma directoria.Este script utiliza o módulo File::Find::Rule para criar a listagem de todas as directorias e sub-directorias, utilizando uma directoria de partida.Este script pode servir de base para a criação de um script para gerir directorias e apagar directorias vazias caso seja necessário.Para tal basta fazer pequenas alterações .&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-209&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Para poderem executar este script teram que ter o módulo File::Find::Files instalado , para tal basta executarem o seguinte comando na linha de comandos:&lt;/p&gt;
&lt;p&gt;[bash]&lt;/p&gt;
&lt;p&gt;sudo cpan&lt;/p&gt;
&lt;p&gt;install &quot; File::Find::Rule&quot;&lt;/p&gt;
&lt;p&gt;[/bash]&lt;/p&gt;
&lt;p&gt;Tendo o módulo instalado já poderam executar este script.&lt;/p&gt;
&lt;p&gt;[perl]#!/usr/bin/perl&lt;/p&gt;
&lt;p&gt;use strict;&lt;/p&gt;
&lt;p&gt;use warnings;&lt;/p&gt;
&lt;p&gt;use File::Find::Rule;&lt;/p&gt;
&lt;p&gt;my @sub_dirs;&lt;/p&gt;
&lt;p&gt;&amp;amp;Main();&lt;/p&gt;
&lt;p&gt;sub Main(){&lt;br /&gt;
#leitura da directória por argumento&lt;br /&gt;
chomp(my $path = $ARGV[0]);&lt;/p&gt;
&lt;p&gt;#Listagem de todos os directórios&lt;br /&gt;
my $regra_pesquisa = File::Find::Rule-&amp;gt;new;&lt;br /&gt;
$regra_pesquisa-&amp;gt;directory;&lt;br /&gt;
@sub_dirs = $regra_pesquisa-&amp;gt;in($path);&lt;/p&gt;
&lt;p&gt;&amp;amp;AnalisarDirs();&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub AnalisarDirs(){&lt;br /&gt;
my @emptydirs;&lt;br /&gt;
my $file2;&lt;/p&gt;
&lt;p&gt;foreach $file2 (@sub_dirs){&lt;br /&gt;
opendir(FILE, &quot;$file2&quot;) or die($!);&lt;br /&gt;
readdir FILE;&lt;br /&gt;
readdir FILE;&lt;br /&gt;
if(!(readdir FILE)){&lt;br /&gt;
print &quot;$file2 : directório vazion&quot;;&lt;br /&gt;
push(@emptydirs, $file2);&lt;br /&gt;
}&lt;br /&gt;
closedir(FILE) or die &quot;$!&quot;;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;########Totalizaçao dos directorios###########&lt;br /&gt;
my $total = @sub_dirs;&lt;br /&gt;
my $vazio = @emptydirs;&lt;br /&gt;
print &quot;Total directórios&quot; . $total .&quot;, directórios vazios &quot; . $vazio . &quot;n&quot;;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Feb 2012 18:22:09 +0000</pubDate>
        <link>http://localhost:4000/2012/02/15/perlreportar-directorias-vazias.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/02/15/perlreportar-directorias-vazias.html</guid>
        
        
      </item>
    
      <item>
        <title>Gerir Cron's com o Perl</title>
        <description>&lt;p&gt;Bem pessoal aqui fica um pequeno script para vos ajudar a a automatizar as vossas tarefas quando tiverem que mexer em crontabs.Este script surgiu numa aula de Sistemas Operativos em que tínhamos um exercício em que tínhamos que adicionar novos crons com o script. Mas para não limitar o script acrescentei mais umas funções.Tais como tornar a criação de um novo cron mais interactiva , apagar crons , gravar o cron na localização correcta consoante o utilizador que está a executar o script.&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-159&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[perl]&lt;br /&gt;
#!/usr/bin/perl&lt;br /&gt;
#Developed by : Rubem Mota&lt;br /&gt;
#Dont use to earn money and keep all copyrights reserved to me&lt;br /&gt;
#Twitter: @rubemlrm&lt;br /&gt;
package SysAdmin;&lt;br /&gt;
use warnings;&lt;br /&gt;
use strict;&lt;br /&gt;
use autodie;&lt;/p&gt;
&lt;p&gt;#declaração de variáveis&lt;br /&gt;
my $min ;&lt;br /&gt;
my $horas ;&lt;br /&gt;
my $dia;&lt;br /&gt;
my $mes;&lt;br /&gt;
my $diasemana;&lt;br /&gt;
my $uid = `id -u`;&lt;br /&gt;
my $opt;&lt;br /&gt;
my $comando;&lt;br /&gt;
my $user;&lt;br /&gt;
my $val;&lt;/p&gt;
&lt;p&gt;#funções a ser chamadas&lt;br /&gt;
&amp;amp;Main();&lt;/p&gt;
&lt;p&gt;#funções&lt;/p&gt;
&lt;p&gt;sub Main(){&lt;br /&gt;
print &quot;Bem vindo a área de gestõa crontabn&quot;;&lt;br /&gt;
print &quot;Se deseja eliminar um cron pressione tecla Dn&quot;;&lt;br /&gt;
print &quot;se deseja adicionar um cron pressiona a tecla An&quot;;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ( $opt eq &quot;D&quot;){&lt;br /&gt;
&amp;amp;Eliminar();&lt;br /&gt;
}elsif($opt eq &quot;A&quot;){&lt;br /&gt;
&amp;amp;Adicionar();&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;Opção inválida&quot;;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;sub Eliminar{&lt;br /&gt;
if ($uid != 0){&lt;br /&gt;
&amp;amp;User();&lt;br /&gt;
system(&quot;nano /var/spool/cron/crontabs/$user&quot;);&lt;br /&gt;
system(&quot;sleep 2&quot;);&lt;br /&gt;
print &quot;Processo Concluido.A retornar para o menu inicialn&quot;;&lt;br /&gt;
system (&quot;sleep 2&quot;);&lt;br /&gt;
&amp;amp;Main();&lt;br /&gt;
}else{&lt;br /&gt;
system(&quot;nano /etc/crontab&quot;);&lt;br /&gt;
system(&quot;sleep 2&quot;);&lt;br /&gt;
print &quot;Processo Concluido.A retornar para o menu inicialn&quot;;&lt;br /&gt;
system (&quot;sleep 2&quot;);&lt;br /&gt;
&amp;amp;Main();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Adicionar{&lt;br /&gt;
&amp;amp;Minutos();&lt;br /&gt;
&amp;amp;Horas();&lt;br /&gt;
&amp;amp;Dia();&lt;br /&gt;
&amp;amp;Mes();&lt;br /&gt;
&amp;amp;DiaSemana();&lt;br /&gt;
&amp;amp;Comando();&lt;br /&gt;
&amp;amp;Final();&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Minutos{&lt;br /&gt;
print &quot;Introduza os parametros de agendamenton&quot;;&lt;br /&gt;
print &quot;Introduza os minutosn&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado em todos os minutos - pressione an&quot;);&lt;br /&gt;
print (&quot;Se desejar especificar o minuto - pressione c n&quot;);&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$min = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$min=$val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Minutos();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Horas{&lt;br /&gt;
print &quot;Introduza as horasn&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado em todos as horas - pressione an&quot;);&lt;br /&gt;
print(&quot;Se desejar especificar as horas - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$horas = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$horas = $val;&lt;br /&gt;
}else{&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
&amp;Horas;&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Dia{&lt;br /&gt;
print &quot;Introduza os dian&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado em todos os dias - pressione an&quot;);&lt;br /&gt;
print (&quot;Se desejar especificar o dia - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$dia = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$dia = $val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Dia();&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;sub Mes{&lt;br /&gt;
print &quot;mesn&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado todos os meses - pressione an&quot;);&lt;br /&gt;
print (&quot; Se desejar especificar o mes - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$mes = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$mes= $val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Mes();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub DiaSemana{&lt;br /&gt;
print &quot;Dia da Semann&quot;;&lt;br /&gt;
print(&quot;Se desejar que o script seja executado todos os diass - pressione an&quot;);&lt;br /&gt;
print(&quot;Se desejar especificar o dia - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$diasemana=&quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$diasemana = $val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;DiaSemana();&lt;/p&gt;
&lt;p&gt;}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Comando(){&lt;br /&gt;
print (&quot;Introduza o comando ou script a executarn&quot;);&lt;/p&gt;
&lt;p&gt;chomp(my $script = );&lt;br /&gt;
$comando = $script;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub User(){&lt;br /&gt;
chomp($user = `whoami`);&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub ChUser(){&lt;br /&gt;
print &quot;Escolha o utilizador que vai executar o script/comandon&quot;;&lt;br /&gt;
chomp($user = );&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;#funcoes de validação&lt;br /&gt;
sub Validar(){&lt;br /&gt;
print &quot;Introduza o valorn&quot;;&lt;br /&gt;
chomp($val = );&lt;br /&gt;
if ($val =~ /d,?/?-?/){&lt;br /&gt;
print &quot;Valor guardadon&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
}else{&lt;br /&gt;
&amp;amp;ErrorVal();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub ErrorVal(){&lt;br /&gt;
print &quot;Valor inválidon&quot;;&lt;br /&gt;
print &quot;Deseja sair ? se sim pressione Sn&quot;;&lt;br /&gt;
print &quot;Senão, se quiser voltar a repetir este passo pressione R&quot;;&lt;br /&gt;
chomp($opt= );&lt;br /&gt;
if($opt eq &quot;S&quot;){&lt;br /&gt;
exit;&lt;br /&gt;
}elsif($opt eq &quot;R&quot;){&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Validar();&lt;/p&gt;
&lt;p&gt;}else{&lt;br /&gt;
print &quot;Opção erradan&quot;;&lt;br /&gt;
&amp;amp;ErrorVal();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;#função relativa a verificaçao do user id e sua respectiva config-&lt;/p&gt;
&lt;p&gt;sub Final(){&lt;br /&gt;
if ($uid != 0){&lt;br /&gt;
&amp;amp;User();&lt;br /&gt;
open(FILE, &quot;&amp;gt;&amp;gt;/var/spool/cron/crontabs/$user&quot;);&lt;br /&gt;
print FILE &quot;$min $horas $mes $dia $diasemana $comandon&quot;;&lt;br /&gt;
close(FILE);&lt;br /&gt;
}else{&lt;br /&gt;
&amp;amp;ChUser();&lt;br /&gt;
open(FILE, &quot;&amp;gt;&amp;gt;/etc/crontab&quot;);&lt;br /&gt;
print FILE &quot;$min $horas $mes $dia $diasemana $user $comandon&quot;;&lt;br /&gt;
close(FILE);&lt;br /&gt;
}&lt;br /&gt;
}&lt;br /&gt;
[/perl]&lt;br /&gt;
&lt;strong&gt;Update: Adicionados novos verificadores de erros&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Update: Adicionadas novas funções , corrigidos pequenos bugs.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2012 23:03:15 +0000</pubDate>
        <link>http://localhost:4000/2012/01/24/perlscript-setup-crontab.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/01/24/perlscript-setup-crontab.html</guid>
        
        
      </item>
    
  </channel>
</rss>
