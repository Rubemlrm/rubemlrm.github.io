<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rubem Mota</title>
    <description>Personal Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/sitemap.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 20 Jun 2020 13:08:22 +0100</pubDate>
    <lastBuildDate>Sat, 20 Jun 2020 13:08:22 +0100</lastBuildDate>
    <generator>Jekyll v4.1.0</generator>
    
      <item>
        <title>Migração de SVN para GIT</title>
        <description>&lt;p&gt;Recentemente foi-me lançado o desafio de migrar um servidor de svn para git , e comecei logo a procura de importações directas,
sendo que encontrei sugestões tais como o  &lt;a href=&quot;https://github.com/nirvdrum/svn2git/&quot; title=&quot;svn2git&quot;&gt;svn2git&lt;/a&gt; e &lt;a href=&quot;http://subgit.com/,&amp;quot;subit&amp;quot;&quot;&gt;subGit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No entanto não se adequavam ao que se pretendia fazer, então após mais alguma pesquisa, encontrei várias referências a um comando do git que permitia
clonar um repositório de SVN para Git e conseguir &lt;strong&gt;manter o histórico&lt;/strong&gt; do mesmo sem configuraçoes extra ou programa externos. O comando em causa é o&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git svn clone http://svn/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Atráves deste comando é efectuado um pedido ao servidor de svn e será criada uma nova directória para o repositório em causa, sendo que este comando tem a possibilidade de aceitar os parametros que podem ser passados para os &lt;strong&gt;init&lt;/strong&gt; e &lt;strong&gt;fetch&lt;/strong&gt; da utilização de git.
No entanto de nada nos serve um clone de um
repositório sem os logs e o mapeamento dos autores dos commits para o sistema que está a ser utilizado. Para tal basta utilizar os seguintes comandos.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;svn log &lt;span class=&quot;nt&quot;&gt;--xml&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;author&amp;gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; | perl &lt;span class=&quot;nt&quot;&gt;-pe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/.*&amp;gt;(.*?)&amp;lt;.*/$1 = /'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tee &lt;/span&gt;users.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este primeiro comando deverá ser executado no servidor de svn actual , com este comando será possivel gerar um ficheiro com as informações relativas a todos
os autores de commits do svn em causa. Este ficheiro será utilizado como ficheiro de mapeamento de migração de commits e logs para o Git.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git svn clone &lt;span class=&quot;nt&quot;&gt;--stdlayout&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-metadata&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--authors-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;users.txt svn://hostname/path dest_dir-tmp&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Este segundo comando irá fazer clone do repositório no servidor de SVN e irá criar um repositório de Git local, com a informação de todos os commits e logs deste novo repositório.
Será necessário ainda especificar o &lt;strong&gt;remote origin&lt;/strong&gt; que iremos utilizar para todas as ações futuras , para tal basta executar os seguintes comandos:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git remote add origin git@server:user/project-name.git
git push origin &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A partir deste momento será possivel sincronizar o repositório migrado com o servidor de Git.&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Jul 2017 22:16:06 +0100</pubDate>
        <link>http://localhost:4000/git/svn/dicas/2017/07/20/migrate-from-svn-to-git.html</link>
        <guid isPermaLink="true">http://localhost:4000/git/svn/dicas/2017/07/20/migrate-from-svn-to-git.html</guid>
        
        
        <category>git</category>
        
        <category>svn</category>
        
        <category>dicas</category>
        
      </item>
    
      <item>
        <title>De volta a escrita</title>
        <description>&lt;p&gt;Ora viva,&lt;/p&gt;

&lt;p&gt;Já faz algum tempo que andava afastado deste mundo dos blogs e companhia, e achei
que estava na hora de voltar a fazer um projecto do género.
Este projecto vai server como um repositório de experiencias e dicas na área de programaçao e sistemas.&lt;/p&gt;

&lt;p&gt;Mas como todos os primeiros artigos/posts numa comunidade web, irei fazer uma pequena apresentaçao.&lt;/p&gt;

&lt;p&gt;Tenho neste momento 27 anos , e sou programador numa empresa que faz desenvolvimento para &lt;strong&gt;SAP&lt;/strong&gt;.
Tenho desenvolvido nos ultimos anos em &lt;strong&gt;PHP&lt;/strong&gt; , &lt;strong&gt;Javascript&lt;/strong&gt;, &lt;strong&gt;Mysql/Mongodb&lt;/strong&gt;, sendo que este ano
tenho aprofundado mais os meus conhecimentos em &lt;strong&gt;c#/vb.net&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Além da área de programação, tambem tenho experiencia em gestão de servidores Linux,
mais concretamente com as distribuições Debian/Arch/Fedora.&lt;/p&gt;

&lt;p&gt;No meu tempo livre sou praticante de Karaté e bombeiro voluntário.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Jul 2017 22:16:06 +0100</pubDate>
        <link>http://localhost:4000/2017/07/17/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/17/welcome-to-jekyll.html</guid>
        
        
      </item>
    
      <item>
        <title>Converter Debian Wheezy para Debian Testing</title>
        <description>&lt;p&gt;Com o recente lançamento do Debian como versão final , foi anunciada a versão 8 desta distribuição.
A versão 8 desta distribuição terá o codename de “Jessie” e será lançado durante 2015. Parassá os repositórios do Debian Jessie ainda estão com os pacotes que estão disponiveis para o Debian Wheezy , sendo que parassá os pacotes disponíveis no repo Security-updates do Jessie ainda não estão a ser mantidas pela equipa oficial do debian.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-R-IkMedx9EE/UYYcktIrKFI/AAAAAAAADJw/0OkXQUJRuMY/s635/debian_logo1.jpg&quot; alt=&quot;&amp;quot;debian logo&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Feita esta pequena apresentação do Jessie , vou explicar como actualizar o Debian Wheezy para Debian Jessie.&lt;/p&gt;

&lt;p&gt;Como primeiro passo é necessário editar o ficheiro  &lt;strong&gt;/etc/apt/sources.lists&lt;/strong&gt; como root e colocar as seguintes entradas no ficheiro:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;deb ftp://ftp.uk.debian.org/debian/ jessie main contrib non-free
deb ftp://ftp.uk.debian.org/debian/ jessie-proposed-updates main contrib non-free
deb-src ftp://ftp.uk.debian.org/debian/ jessie main contrib non-free
deb-src ftp://ftp.uk.debian.org/debian/ jessie-proposed-updates main contrib non-free&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;No entanto é necessário verificar que não existe nenhuma entrada referente a versões anteriores.&lt;/em&gt;&lt;/strong&gt;
Após este passo é necessário atualizar a lista de repositórios , para tal basta executar o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por fim é necessário actualizar o sistema , no entanto como se vai atualizar o sistema para uma versão acima , será necessário executar o comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get dist-upgrade&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sun, 12 May 2013 17:46:49 +0100</pubDate>
        <link>http://localhost:4000/tutorial/debian/2013/05/12/converter-debian-wheezy-para-debian-testing.html</link>
        <guid isPermaLink="true">http://localhost:4000/tutorial/debian/2013/05/12/converter-debian-wheezy-para-debian-testing.html</guid>
        
        
        <category>Tutorial</category>
        
        <category>Debian</category>
        
      </item>
    
      <item>
        <title>Instalação do yaourt em ArchLinux</title>
        <description>&lt;p&gt;Como utilizador de archlinux já há uns anos , surgiu a necessidade de instalar pacotes que estão disponíveis no AUR . No entanto instalar software que está disponível no AUR pode ser um pouco demoroso e tive necessidade de encontrar uma alternativa viável que me pudesse gerir as instalações a partir do AUR como a partir dos repos oficiais.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.archlinux.org/static/logos/archlinux-logo-dark-90dpi.ebdee92a15b3.png&quot; alt=&quot;&amp;quot;arch logo&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como tal encontrei o software yaourt que funciona como gestor de pacotes.Umas das principais mais valias deste gestor de pacotes é que dá para gerir de forma centralizada a instalação dos pacotes tanto de repos AUR como de repos oficias.&lt;/p&gt;

&lt;p&gt;Como tal vou deixar aqui um pequeno tutorial de como instalar este software e algumas dicas de utilização. Inicialmente será necessário editar o ficheiro &lt;strong&gt;/etc/pacman.conf&lt;/strong&gt; e adicionar as seguintes entradas:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;archlinuxfr]
  SigLevel &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Never
  Server &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; http://repo.archlinux.fr/&lt;span class=&quot;nv&quot;&gt;$arch&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Após este passo iremos actualizar o sistema e instalar o yaourt ,para tal basta correr o seguinte comando como root:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-Sy&lt;/span&gt; yaourt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;E pronto temos o yaourt instalado =) simples não foi ?
Agora irei deixar alguns exemplos de utilização do mesmo. Para fazer pesquisa e instalação de um pacote basta executar o comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &amp;lt;pesquisa&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter&quot; alt=&quot;&quot; src=&quot;http://archlinux.fr/wp-content/uploads/2007/06/yaourt_2.png&quot; width=&quot;686&quot; height=&quot;169&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para sincronizar as bases de dados , actualizar e fazer pesquisas no aur basta executar o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &lt;span class=&quot;nt&quot;&gt;-Syu&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--devel&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--aur&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Caso queira actualizar só o sistema e o aur fazem&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &lt;span class=&quot;nt&quot;&gt;-Syua&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para compilar um pacote atravez do código fonte podem utilizar o comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; yaourt &lt;span class=&quot;nt&quot;&gt;-Sb&lt;/span&gt; &amp;lt;pacote&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Estes são dos comandos mais utilizados , no entanto existe um leque enorme de possiveis comandos que podem ser executados. De referir ainda que devem executar o yaourt sempre como utilizador “normal” visto que durante a instalação dos pacotes será sempre pedida a vossa password , desta forma irão ter mais controlo sobre o que está a ser instalado.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 May 2013 17:28:59 +0100</pubDate>
        <link>http://localhost:4000/archlinux/tutorial/2013/05/12/instalacao-yaourt-em-archlinux.html</link>
        <guid isPermaLink="true">http://localhost:4000/archlinux/tutorial/2013/05/12/instalacao-yaourt-em-archlinux.html</guid>
        
        
        <category>Archlinux</category>
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>[Script]Gerir VirtualHosts do Apache</title>
        <description>&lt;p&gt;Ora boas tardes,&lt;/p&gt;

&lt;p&gt;Depois de algum tempo sem escrever nada no blog , trago-vos um script em perl acabado de sair do forno que nos permite adicionar , remover , listar , verificar , desativar os nossos virtualhosts.&lt;/p&gt;

&lt;p&gt;Para tal temos temos ao nosso dispor as seguintes opções:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-add&lt;/strong&gt; : para adicionar um virtualhost no apache , para tal basta usar a seguinte sintax:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-add&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-add&lt;/span&gt; www.rubemlrm.com rubemlrm &lt;span class=&quot;c&quot;&gt;#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-rem&lt;/strong&gt;: para remover um virtualhost no apache, para tal basta usar a seguinte sintax:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-rem&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-rem&lt;/span&gt; www.rubemlrm.com &lt;span class=&quot;c&quot;&gt;#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-dis&lt;/strong&gt; : para desativar um virtualhost no apache , para tal basta usar a seguinte syntax:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-dis&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-dis&lt;/span&gt; www.rubemlrm.com &lt;span class=&quot;c&quot;&gt;#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-c&lt;/strong&gt; :Esta opção poderá receber um argumento que é o &lt;url&gt; para mostrar a informação do virtualhost , caso não se passe o argumento do url irá mostrar todos os .conf que estão na diretoria /etc/apache2/sites-enabled/. Para tal basta usar a seguinte sintax:&lt;/url&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#irá listar todos os .conf da directoria&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt; 
ou&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./apache &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; www.rubemlrm.com &lt;span class=&quot;c&quot;&gt;#para mostrar o conteudo do .conf deste url&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-h&lt;/strong&gt; : Por fim temos esta opção para nos mostrar os comandos que temos disponíveis.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;./apache &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;De seguida fica o código do script:
true&lt;script src=&quot;https://gist.github.com/rubemlrm/3387796.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Aug 2012 16:07:32 +0100</pubDate>
        <link>http://localhost:4000/2012/08/18/scriptgerir-virtualhosts-no-apache.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/08/18/scriptgerir-virtualhosts-no-apache.html</guid>
        
        
      </item>
    
      <item>
        <title>Verificar m&amp;aacute;quinas de rede</title>
        <description>&lt;p&gt;Boas noites, depois de algum tempo sem postar aqui nada devido a escola .Deixo aqui um pequeno script em perl que permite testar as máquinas de rede para ver quais é que estão ativas na nossa rede informática. Para tal é preciso ter um ficheiro com os ips que queremos testar e o script trata do resto sozinho.&lt;/p&gt;

&lt;div class=&quot;language-perl highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Net::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;autodie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$my_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;ip&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;date +%a%d%m%y%k%M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;`);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;ficheiro com ips&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@ips&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@ips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Net::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Ping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#print &quot;$host -&amp;gt; está activo.n&quot;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -&amp;gt; está activo.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#print &quot;$host -&amp;gt; está offlinen&quot;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -&amp;gt; está offline.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Reporte da lista&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#para um ficheiro a ser enviado por mail&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;gt;../logs/'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$date_machine_networking_report&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@reportlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 16 Mar 2012 21:06:07 +0000</pubDate>
        <link>http://localhost:4000/2012/03/16/verificar-maquinas-de-rede.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/03/16/verificar-maquinas-de-rede.html</guid>
        
        
      </item>
    
      <item>
        <title>Verificar se utilizador existe</title>
        <description>&lt;p&gt;Boas noites&lt;/p&gt;
&lt;p&gt;Desta vez venho apresentar mais um pequeno script feito por mim.Este script tem como fundamento verificar se um utilizador existe ou não no sistema Linux e se existir alem de nos mostrar uma mensagem a dizer que existe ainda vai identificar o UID desse utilizador.Caso contrário vai mostrar uma mensagem de erro a dizer que o utilizador não existe.Atenção não foram utilizados comandos bash por isso é tudo perl scripting.&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-398&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;#!/usr/bin/perl&lt;br /&gt;
use warnings;&lt;br /&gt;
use strict;&lt;br /&gt;
my @finalusers;&lt;br /&gt;
my $utilizador;&lt;br /&gt;
my $statuscode = 0;&lt;br /&gt;
my $uid;&lt;/p&gt;
&lt;p&gt;#Analise se foi intruzido um nome ou não&lt;br /&gt;
if(@ARGV != 1){die &quot;Argumento inválido&quot;;}&lt;br /&gt;
chomp($utilizador = $ARGV[0]);&lt;/p&gt;
&lt;p&gt;open(FILE, &quot;/etc/passwd&quot;) || die($!);&lt;br /&gt;
chomp(my @utilizadores = &lt;FILE&gt;);&lt;br /&gt;
close(FILE);&lt;br /&gt;
foreach my $date (@utilizadores){&lt;br /&gt;
chomp $date;&lt;br /&gt;
my @finalusers = split /:/, $date;&lt;br /&gt;
chomp(@finalusers);&lt;br /&gt;
if($finalusers[0] eq $utilizador){&lt;br /&gt;
$uid = $finalusers[2];&lt;br /&gt;
$statuscode++;&lt;br /&gt;
}&lt;br /&gt;
}&amp;lt;/p&amp;gt;
&lt;p&gt;if( $statuscode != 1){&lt;br /&gt;
print &quot;O $utilizador NÃO se encontra criado no sisteman&quot;;&lt;br /&gt;
}else{&lt;/p&gt;
&lt;p&gt;print &quot;o $utilizador JÁ se encontra criado no sistema! O seu UID é $uid !n&quot; ;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;/FILE&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 23 Feb 2012 00:18:54 +0000</pubDate>
        <link>http://localhost:4000/2012/02/23/scriptverificar-se-utilizador-existe.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/02/23/scriptverificar-se-utilizador-existe.html</guid>
        
        
      </item>
    
      <item>
        <title>Sysadmin-toolbox</title>
        <description>&lt;p&gt;Depois de algum tempo a programar em perl , decidi &quot;que tal por as minhas capacidades a prova&quot; e construi um painel administrativo em perl para gerir sistemas.&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-214&quot;&gt;&lt;/a&gt;E depois de algumas horas a programar , tenho uma versão 1 pronta a utilizar ainda com poucas funcionalidades é certo , mas para já considero que tem as funcionalidades básicas já implementadas , tais como:&lt;/p&gt;
&lt;p&gt;-Adicionar/remover utilizadores;&lt;/p&gt;
&lt;p&gt;-Possibilidade de fazer backups dos dados de um utilizador que se vai apagar;&lt;/p&gt;
&lt;p&gt;-Gestão de crons;&lt;/p&gt;
&lt;p&gt;-Funcionalidade para testar os pcs da rede.De forma a ver quais estão online e quais não estão;&lt;/p&gt;
&lt;p&gt;-Funcionalidade para encontrar pastas vazias e ficar com um registo das mesmas;&lt;/p&gt;
&lt;p&gt;-Funcionalidade para ver quais são os processos que estão a gastar mais recursos&lt;/p&gt;
&lt;p&gt;-Funcionalidade para adicionar vários utilizadores a uma máquina de forma automática&lt;/p&gt;
&lt;p&gt;-Funcionalidade para encontrar ficheiros que tenham um tamanho superior ao indicado.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Este projecto está disponível no github a partir do seguinte link : &lt;a href=&quot;https://github.com/Rubemlrm/sysadmin-toolbox&quot;&gt;https://github.com/Rubemlrm/sysadmin-toolbox&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Para utilizar basta fazer download do projecto e configurar o ficheiro includes.pl que está na pasta includes , com o caminho correcto para o script.Espero que reportem possiveis bugs e sugestões =).&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Feb 2012 15:25:13 +0000</pubDate>
        <link>http://localhost:4000/2012/02/16/perllinuxsysadmin-toolbox.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/02/16/perllinuxsysadmin-toolbox.html</guid>
        
        
      </item>
    
      <item>
        <title>Reportar Directorias Vazias</title>
        <description>&lt;p&gt;Aqui fica um pequeno script para encontrar pastas vazias dentro de uma directoria.Este script utiliza o módulo File::Find::Rule para criar a listagem de todas as directorias e sub-directorias, utilizando uma directoria de partida.Este script pode servir de base para a criação de um script para gerir directorias e apagar directorias vazias caso seja necessário.Para tal basta fazer pequenas alterações .&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-209&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Para poderem executar este script teram que ter o módulo File::Find::Files instalado , para tal basta executarem o seguinte comando na linha de comandos:&lt;/p&gt;
&lt;p&gt;[bash]&lt;/p&gt;
&lt;p&gt;sudo cpan&lt;/p&gt;
&lt;p&gt;install &quot; File::Find::Rule&quot;&lt;/p&gt;
&lt;p&gt;[/bash]&lt;/p&gt;
&lt;p&gt;Tendo o módulo instalado já poderam executar este script.&lt;/p&gt;
&lt;p&gt;[perl]#!/usr/bin/perl&lt;/p&gt;
&lt;p&gt;use strict;&lt;/p&gt;
&lt;p&gt;use warnings;&lt;/p&gt;
&lt;p&gt;use File::Find::Rule;&lt;/p&gt;
&lt;p&gt;my @sub_dirs;&lt;/p&gt;
&lt;p&gt;&amp;amp;Main();&lt;/p&gt;
&lt;p&gt;sub Main(){&lt;br /&gt;
#leitura da directória por argumento&lt;br /&gt;
chomp(my $path = $ARGV[0]);&lt;/p&gt;
&lt;p&gt;#Listagem de todos os directórios&lt;br /&gt;
my $regra_pesquisa = File::Find::Rule-&amp;gt;new;&lt;br /&gt;
$regra_pesquisa-&amp;gt;directory;&lt;br /&gt;
@sub_dirs = $regra_pesquisa-&amp;gt;in($path);&lt;/p&gt;
&lt;p&gt;&amp;amp;AnalisarDirs();&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub AnalisarDirs(){&lt;br /&gt;
my @emptydirs;&lt;br /&gt;
my $file2;&lt;/p&gt;
&lt;p&gt;foreach $file2 (@sub_dirs){&lt;br /&gt;
opendir(FILE, &quot;$file2&quot;) or die($!);&lt;br /&gt;
readdir FILE;&lt;br /&gt;
readdir FILE;&lt;br /&gt;
if(!(readdir FILE)){&lt;br /&gt;
print &quot;$file2 : directório vazion&quot;;&lt;br /&gt;
push(@emptydirs, $file2);&lt;br /&gt;
}&lt;br /&gt;
closedir(FILE) or die &quot;$!&quot;;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;########Totalizaçao dos directorios###########&lt;br /&gt;
my $total = @sub_dirs;&lt;br /&gt;
my $vazio = @emptydirs;&lt;br /&gt;
print &quot;Total directórios&quot; . $total .&quot;, directórios vazios &quot; . $vazio . &quot;n&quot;;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Feb 2012 18:22:09 +0000</pubDate>
        <link>http://localhost:4000/2012/02/15/perlreportar-directorias-vazias.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/02/15/perlreportar-directorias-vazias.html</guid>
        
        
      </item>
    
      <item>
        <title>Gerir Cron's com o Perl</title>
        <description>&lt;p&gt;Bem pessoal aqui fica um pequeno script para vos ajudar a a automatizar as vossas tarefas quando tiverem que mexer em crontabs.Este script surgiu numa aula de Sistemas Operativos em que tínhamos um exercício em que tínhamos que adicionar novos crons com o script. Mas para não limitar o script acrescentei mais umas funções.Tais como tornar a criação de um novo cron mais interactiva , apagar crons , gravar o cron na localização correcta consoante o utilizador que está a executar o script.&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-159&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[perl]&lt;br /&gt;
#!/usr/bin/perl&lt;br /&gt;
#Developed by : Rubem Mota&lt;br /&gt;
#Dont use to earn money and keep all copyrights reserved to me&lt;br /&gt;
#Twitter: @rubemlrm&lt;br /&gt;
package SysAdmin;&lt;br /&gt;
use warnings;&lt;br /&gt;
use strict;&lt;br /&gt;
use autodie;&lt;/p&gt;
&lt;p&gt;#declaração de variáveis&lt;br /&gt;
my $min ;&lt;br /&gt;
my $horas ;&lt;br /&gt;
my $dia;&lt;br /&gt;
my $mes;&lt;br /&gt;
my $diasemana;&lt;br /&gt;
my $uid = `id -u`;&lt;br /&gt;
my $opt;&lt;br /&gt;
my $comando;&lt;br /&gt;
my $user;&lt;br /&gt;
my $val;&lt;/p&gt;
&lt;p&gt;#funções a ser chamadas&lt;br /&gt;
&amp;amp;Main();&lt;/p&gt;
&lt;p&gt;#funções&lt;/p&gt;
&lt;p&gt;sub Main(){&lt;br /&gt;
print &quot;Bem vindo a área de gestõa crontabn&quot;;&lt;br /&gt;
print &quot;Se deseja eliminar um cron pressione tecla Dn&quot;;&lt;br /&gt;
print &quot;se deseja adicionar um cron pressiona a tecla An&quot;;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ( $opt eq &quot;D&quot;){&lt;br /&gt;
&amp;amp;Eliminar();&lt;br /&gt;
}elsif($opt eq &quot;A&quot;){&lt;br /&gt;
&amp;amp;Adicionar();&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;Opção inválida&quot;;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;sub Eliminar{&lt;br /&gt;
if ($uid != 0){&lt;br /&gt;
&amp;amp;User();&lt;br /&gt;
system(&quot;nano /var/spool/cron/crontabs/$user&quot;);&lt;br /&gt;
system(&quot;sleep 2&quot;);&lt;br /&gt;
print &quot;Processo Concluido.A retornar para o menu inicialn&quot;;&lt;br /&gt;
system (&quot;sleep 2&quot;);&lt;br /&gt;
&amp;amp;Main();&lt;br /&gt;
}else{&lt;br /&gt;
system(&quot;nano /etc/crontab&quot;);&lt;br /&gt;
system(&quot;sleep 2&quot;);&lt;br /&gt;
print &quot;Processo Concluido.A retornar para o menu inicialn&quot;;&lt;br /&gt;
system (&quot;sleep 2&quot;);&lt;br /&gt;
&amp;amp;Main();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Adicionar{&lt;br /&gt;
&amp;amp;Minutos();&lt;br /&gt;
&amp;amp;Horas();&lt;br /&gt;
&amp;amp;Dia();&lt;br /&gt;
&amp;amp;Mes();&lt;br /&gt;
&amp;amp;DiaSemana();&lt;br /&gt;
&amp;amp;Comando();&lt;br /&gt;
&amp;amp;Final();&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Minutos{&lt;br /&gt;
print &quot;Introduza os parametros de agendamenton&quot;;&lt;br /&gt;
print &quot;Introduza os minutosn&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado em todos os minutos - pressione an&quot;);&lt;br /&gt;
print (&quot;Se desejar especificar o minuto - pressione c n&quot;);&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$min = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$min=$val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Minutos();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Horas{&lt;br /&gt;
print &quot;Introduza as horasn&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado em todos as horas - pressione an&quot;);&lt;br /&gt;
print(&quot;Se desejar especificar as horas - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$horas = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$horas = $val;&lt;br /&gt;
}else{&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
&amp;Horas;&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Dia{&lt;br /&gt;
print &quot;Introduza os dian&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado em todos os dias - pressione an&quot;);&lt;br /&gt;
print (&quot;Se desejar especificar o dia - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$dia = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$dia = $val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Dia();&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;sub Mes{&lt;br /&gt;
print &quot;mesn&quot;;&lt;br /&gt;
print (&quot;Se desejar que o script seja executado todos os meses - pressione an&quot;);&lt;br /&gt;
print (&quot; Se desejar especificar o mes - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$mes = &quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$mes= $val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Mes();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub DiaSemana{&lt;br /&gt;
print &quot;Dia da Semann&quot;;&lt;br /&gt;
print(&quot;Se desejar que o script seja executado todos os diass - pressione an&quot;);&lt;br /&gt;
print(&quot;Se desejar especificar o dia - pressione c n&quot;) ;&lt;br /&gt;
chomp($opt = );&lt;br /&gt;
if ($opt eq &quot;a&quot;){&lt;br /&gt;
$diasemana=&quot;*&quot;;&lt;br /&gt;
}elsif($opt eq &quot;c&quot;){&lt;br /&gt;
&amp;amp;Validar();&lt;br /&gt;
$diasemana = $val;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;opção inválidan&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;DiaSemana();&lt;/p&gt;
&lt;p&gt;}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub Comando(){&lt;br /&gt;
print (&quot;Introduza o comando ou script a executarn&quot;);&lt;/p&gt;
&lt;p&gt;chomp(my $script = );&lt;br /&gt;
$comando = $script;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub User(){&lt;br /&gt;
chomp($user = `whoami`);&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub ChUser(){&lt;br /&gt;
print &quot;Escolha o utilizador que vai executar o script/comandon&quot;;&lt;br /&gt;
chomp($user = );&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;#funcoes de validação&lt;br /&gt;
sub Validar(){&lt;br /&gt;
print &quot;Introduza o valorn&quot;;&lt;br /&gt;
chomp($val = );&lt;br /&gt;
if ($val =~ /d,?/?-?/){&lt;br /&gt;
print &quot;Valor guardadon&quot;;&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
}else{&lt;br /&gt;
&amp;amp;ErrorVal();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;sub ErrorVal(){&lt;br /&gt;
print &quot;Valor inválidon&quot;;&lt;br /&gt;
print &quot;Deseja sair ? se sim pressione Sn&quot;;&lt;br /&gt;
print &quot;Senão, se quiser voltar a repetir este passo pressione R&quot;;&lt;br /&gt;
chomp($opt= );&lt;br /&gt;
if($opt eq &quot;S&quot;){&lt;br /&gt;
exit;&lt;br /&gt;
}elsif($opt eq &quot;R&quot;){&lt;br /&gt;
system(&quot;clear&quot;);&lt;br /&gt;
&amp;amp;Validar();&lt;/p&gt;
&lt;p&gt;}else{&lt;br /&gt;
print &quot;Opção erradan&quot;;&lt;br /&gt;
&amp;amp;ErrorVal();&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;#função relativa a verificaçao do user id e sua respectiva config-&lt;/p&gt;
&lt;p&gt;sub Final(){&lt;br /&gt;
if ($uid != 0){&lt;br /&gt;
&amp;amp;User();&lt;br /&gt;
open(FILE, &quot;&amp;gt;&amp;gt;/var/spool/cron/crontabs/$user&quot;);&lt;br /&gt;
print FILE &quot;$min $horas $mes $dia $diasemana $comandon&quot;;&lt;br /&gt;
close(FILE);&lt;br /&gt;
}else{&lt;br /&gt;
&amp;amp;ChUser();&lt;br /&gt;
open(FILE, &quot;&amp;gt;&amp;gt;/etc/crontab&quot;);&lt;br /&gt;
print FILE &quot;$min $horas $mes $dia $diasemana $user $comandon&quot;;&lt;br /&gt;
close(FILE);&lt;br /&gt;
}&lt;br /&gt;
}&lt;br /&gt;
[/perl]&lt;br /&gt;
&lt;strong&gt;Update: Adicionados novos verificadores de erros&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Update: Adicionadas novas funções , corrigidos pequenos bugs.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2012 23:03:15 +0000</pubDate>
        <link>http://localhost:4000/2012/01/24/perlscript-setup-crontab.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/01/24/perlscript-setup-crontab.html</guid>
        
        
      </item>
    
      <item>
        <title>Operadores em Perl</title>
        <description>&lt;p style=&quot;text-align: justify;&quot;&gt;Boa tarde , venho desta forma iniciar mais um capitulo para esta rubrica de tutoriais para o perl. Desta vez irei falar de operadores de comparação, operadores de strings e operadores aritméticos. O que são e para que servem ? Bem esta vai ser a questão deste tutorial.Mas sem mais demoras vou iniciar este tutorial.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-125&quot;&gt;&lt;/a&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;Operadores de Comparação&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;Como ponto de partida vou falar sobre os operadores de comparação. Estes operadores servem para comparar strings e/ou números .Mas utilizam nomenclaturas diferentes , ao seja o operador de uma string é diferente do operador de um número. E é importante nunca trocar os operadores porque podem ficar com erros no vosso programa e depois perderem algum tempo a procura do erro.&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;Por exemplo se quisermos comparar números temos que usar operadores matemáticos, tais como &quot;&amp;lt; &amp;gt; =&quot; enquanto que com strings utilizamos operadores orientados para strings , tais como &quot;eq , ne , et&quot;.Inicialmente isto pode parecer estranho porque não se sabe o seu significado .Mas para vos ajudar a aprender isso coloco aqui uma tabela com o significado dos operadores e seus equivalentes entre string e números.&lt;br /&gt;
Ex:&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
[perl]a &amp;lt; b ;&lt;br /&gt;
#nesta situação estamos a dizer que o b é maior que o a;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;a eq b ;&lt;br /&gt;
#Nesta situação estamos a comparar duas variáveis strings e como tal temos que usar os operadores para string.&lt;/p&gt;
&lt;p&gt;1 eq &quot;teste&quot;;&lt;br /&gt;
#Isto está errado visto que não se podem nem comparar strings com números&lt;/p&gt;
&lt;p&gt;&quot;teste&quot; == &quot;teste&quot;;&lt;br /&gt;
#isto esta errado porque estamos a utilizar um operador de comparação numérico num situação em que estamos a comparar #strings&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;Tabela relativa aos operadores de comparação&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;table border=&quot;1px&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Comparação&lt;/th&gt;&amp;lt;/p&amp;gt;
&lt;th&gt;Numéricos&lt;/th&gt;&amp;lt;/p&amp;gt;
&lt;th&gt;Strings&lt;/th&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;Igual&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;==&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;eq&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;Diferentes&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;!=&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;ne&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;Menor do que&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;lt&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;Maior do que&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;gt&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;Menor ou igual a&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;=&amp;lt;&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;le&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;Maior ou igual&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;ge&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;Equivalência&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;&amp;lt; =&amp;gt;&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;cmp&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/tbody&gt;&lt;br /&gt;
&lt;/table&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;Operadores Aritméticos&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;Os operadores aritméticos ou &quot;sinais de operações matemáticas&quot; são a mesma coisa , mas em linguagens de programação são usadas de forma um pouco diferente. Mas visto que não é necessário explicar cada um , deixo aqui uma pequena tabela com os operadores e sua actualização.&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;table border=&quot;1px&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Operador&lt;/th&gt;&amp;lt;/p&amp;gt;
&lt;th&gt;Função&lt;/th&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;Soma&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;Subtração&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;Multiplicação&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;Divisão&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;**&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;Expoente&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;Resto de divisão&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/tbody&gt;&lt;br /&gt;
&lt;/table&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;Operadores lógicos&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;Estes operadores servem para realizar operações do tipo boolean(1 ou 0 / Verdadeiro ou falso).Só existem 3 operadores lógicos como a tabela abaixo demonstra.&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;table border=&quot;1px&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Operador&lt;/th&gt;&amp;lt;/p&amp;gt;
&lt;th&gt;Operador(alternativa)&lt;/th&gt;&amp;lt;/p&amp;gt;
&lt;th&gt;Significado&lt;/th&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;and&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;&quot;E&quot; lógico&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;or&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;&quot;And&quot; lógico&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&amp;lt;/p&amp;gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;not&lt;/td&gt;&amp;lt;/p&amp;gt;
&lt;td&gt;Negação&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/tbody&gt;&lt;br /&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br /&gt;
Ex:&lt;br /&gt;
[perl]1 &amp;amp;&amp;amp; 2;&lt;br /&gt;
#Caso o valor 1 e 2 sejam verdadeiros então o retorno desta operação vai ser verdadeiro.[/perl]&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;[perl]1 or 2;&lt;br /&gt;
#caso um dos valores seja verdadeiro retorna o valor de verdadeiro[/perl]&lt;/p&gt;
&lt;p&gt;[perl]!2;&lt;br /&gt;
#com este ultimo operador nega todos os valores associados a este operador.&lt;br /&gt;
[/perl]&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Jan 2012 19:58:45 +0000</pubDate>
        <link>http://localhost:4000/2012/01/18/perloperadores-em-perl.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/01/18/perloperadores-em-perl.html</guid>
        
        
      </item>
    
      <item>
        <title>Ciclos de Controlo:&quot;If..else&quot; e &quot;If..elsif..&quot; em Perl</title>
        <description>&lt;p&gt;E aqui vem o 3º artigo relativo aos artigos de perl. Neste artigo vou-vos ensinar a utilizar um dos ciclos de controlo mais utilizados em programação que é o ciclo &lt;strong&gt;&quot;if..else&quot;&lt;/strong&gt; e sua forma complexa &lt;strong&gt;&quot;if..elsif&quot;&lt;/strong&gt; .Este ciclo serve para controlar o fluxo de dados de um programa, no sentido de que se uma condição for verdadeira vai realizar uma acção e se for falsa vai realizar outra.&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-118&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;O&lt;strong&gt; ciclo &quot;if..else&quot;&lt;/strong&gt; divide-se em duas partes:&lt;/p&gt;
&lt;p&gt;[perl]if (condição) {&lt;/p&gt;
&lt;p&gt;#bloco de código1&lt;/p&gt;
&lt;p&gt;}else{&lt;/p&gt;
&lt;p&gt;#bloco de código2&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt;Como podem ver tem uma estrutura muito simples .Mas para facilitar a vossa compreensão de como isto funciona vou explicar passo a passo o que está neste exemplo.&lt;/p&gt;
&lt;p&gt;[perl]if (condição) {&lt;/p&gt;
&lt;p&gt;#na primeira linha inicio o ciclo if dizendo que tem que verificar a condição que está entre &quot;()&quot;&lt;strong&gt;, &lt;/strong&gt;caso esta condição seja verdadeira , irá ser #executado o bloco de código1&lt;/p&gt;
&lt;p&gt;}else { #caso seja falso irá executar o bloco de código2&lt;/p&gt;
&lt;p&gt;bloco de código2&lt;/p&gt;
&lt;p&gt;}#não esquecer dos &lt;strong&gt;{}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;A primeira vez pode ser um pouco complicado .Mas agora vou dar um exemplo prático .Imaginem que que queremos fazer um script que analise um valor introduzido e diga se é negativo ou positivo. Para tal fazemos o seguinte.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;#!/usr/bin/perl -w&lt;br /&gt;
use strict;&lt;br /&gt;
print &quot;Introduza um númeron&quot;;&lt;br /&gt;
chomp(my $val = &lt;STDIN&gt;);&amp;lt;/p&amp;gt;
&lt;p&gt;if($val &amp;gt; 0){&lt;br /&gt;
print &quot;número é positivon&quot;;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;número é negativon&quot;;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt;Nesta situação utilizamos o if para verificar se o número é positivo ou negativo. E agora vocês perguntam-se então e se tivermos mais do que 2 condições para analisar ou então neste programa de ver se é positivo ou negativo como fazemos se o número for 0. Bem para lidar com essas situações temos uma derivação do ciclo If que é o &quot;if .. elsif&quot;.&lt;/p&gt;
&lt;p&gt;A sua estrutura de trabalho é bastante parecida ao ciclo if simples , só que neste caso temos 2 ou mais condições para verificar. De seguida fica a estrutura de um ciclo &quot;if..elsif&quot;.&lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;if (condição) {&lt;/p&gt;
&lt;p&gt;#na primeira linha inicio o ciclo if dizendo que tem que verificar a condição que está entre &lt;strong&gt;&quot;()&quot;, &lt;/strong&gt;caso esta condição seja verdadeira , irá ser #executado o bloco de código1&lt;/p&gt;
&lt;p&gt;#bloco de código1&lt;/p&gt;
&lt;p&gt;}elsif(condição){ #caso a primeira condição não seja verdade o ciclo irá verificar a segunda condição.&lt;/p&gt;
&lt;p&gt;#bloco de código2&lt;/p&gt;
&lt;p&gt;}else{#por fim caso nenhuma destas condições sejam verdadeiras então irá executar o bloco de código 3&lt;/p&gt;
&lt;p&gt;#bloco de código3&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Como podem ver  este tipo de estrutura oferece um controlo de dados um pouco mais complexa. Como não poderia de deixar de fazer vou deixar um exemplo prático deste ciclo .E como tal vou pegar no programa anterior e irei usar este ciclo para verificar se o valor introduzido é 0.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;#!/usr/bin/perl -w&lt;br /&gt;
use strict;&lt;br /&gt;
print &quot;Introduza um númeron&quot;;&lt;br /&gt;
chomp(my $val = &lt;STDIN&gt;);&amp;lt;/p&amp;gt;
&lt;p&gt;if($val &amp;gt; 0){&lt;br /&gt;
print &quot;número é positivon&quot;;&lt;br /&gt;
}elsif($val &amp;lt; 0){&lt;br /&gt;
print &quot;número é negativon&quot;;&lt;br /&gt;
}else{&lt;br /&gt;
print &quot;o valor é nulo&quot;;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;E dou por terminado este artigo. Qualquer questão podem me contactar pelo twitter ou deixando um comentário&lt;/p&gt;
&lt;/STDIN&gt;&lt;/p&gt;&lt;/STDIN&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Jan 2012 23:19:10 +0000</pubDate>
        <link>http://localhost:4000/2012/01/17/perlciclos-de-controloif-else-e-if-elsif.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/01/17/perlciclos-de-controloif-else-e-if-elsif.html</guid>
        
        
      </item>
    
      <item>
        <title>Declara&amp;ccedil;&amp;atilde;o de vari&amp;aacute;veis em Perl</title>
        <description>&lt;p&gt;Bem minha gente chegou mais um artigo sobre perl. Desta vez irei focar as declarações de variáveis. Em perl só existem três tipos de variáveis. Estas são divididas por hashes , scalar e array. A declaração de variáveis em perl é um pouco diferente das linguagens mais comuns de programação. Mas passando a parte que interessa.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-111&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;Antes de tudo o que é uma variável e como se caracteriza?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;Uma variável é um &quot;objecto&quot; que contem informação útil para o contexto de programação.Uma variável é caracterizada por 3 coisas:&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;&lt;strong&gt;-Nome:&lt;/strong&gt; Nas boas práticas de programação devemos nomear as variáveis da seguinte forma:&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Primeiro carácter tem que ser uma letra;&lt;/li&gt;
&lt;li&gt;Podem-se utilizar números no nome da variável , mas nunca como primeiro carácter;&lt;/li&gt;
&lt;li&gt;Segundo as regras de boa programação os nomes das variáveis tem que estar em minúsculas;&lt;/li&gt;
&lt;li&gt;Caso seja um junção de palavras a segunda palavra tem que ser em maiúsculas . Ex: testePL.&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;-Tipo de variável&lt;/strong&gt;: Em perl os  tipos de variáveis são:&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hash(%)&lt;/li&gt;
&lt;li&gt;array(@)&lt;/li&gt;
&lt;li&gt;scalar($)&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;
Para quem de vem de fora pode achar estranho não ter que declarar se uma variável escalar é do tipo integer , float , string , etc. Isto porque o perl identifica isso de forma autónoma.&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-Valor :&lt;/strong&gt; Ao seja o valor que a variável vai ter perante o programa. Este valor pode ser escalar , do tipo array ou hash.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;Hash , array , scalar ?! O que é isso&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;Estes são os três tipos de variáveis em perl .E irei explicar cada uma delas.&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;Uma &lt;strong&gt;variável escalar&lt;/strong&gt; é uma variável que só tem um elemento/valor atribuído .Com isto não quero dizer que só pode ter um número ou só pode ter uma palavra. Porque podemos criar um valor com várias palavras  ou com vários números.&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;ex:&lt;/p&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;[perl] my $nome = Rubem ; [/perl]&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
[perl] my $morada = “Portugal , União Europeia”;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;#Atenção caso se queira declarar uma variável scalar desta forma tem que se usar os &quot; &quot; ou '  '&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt;[perl]my $numero = 7110432[/perl]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Um&lt;strong&gt; array é uma variável &quot;lista&quot;&lt;/strong&gt; ao seja tem mais do que um valor atribuido. E vocês pensam agora assim então mas qual é a diferença entre scalar e array.A diferença é simples um um array pode ter vários scalar's mas um scalar se for igualado a um array só vai ficar com o valor igual ao número de elementos do array.&lt;/p&gt;
&lt;p&gt;Ex:&lt;/p&gt;
&lt;p&gt;[perl]my @array = (teste, seila, portugal);[/perl]&lt;/p&gt;
&lt;p&gt;[perl] my $val = @array;&lt;/p&gt;
&lt;p&gt;#a var val vai ficar com o valor de 3 que é o número de elementos do array&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt;Depois de ter explicado a diferença entre escalar e array vou mostrar como se podem criar arrays:&lt;/p&gt;
&lt;p&gt;[perl]my @array = (1..10);&lt;/p&gt;
&lt;p&gt;#neste caso estamos a dizer que o array vai ter todos os valores desde o 1 até ao 10[/perl]&lt;/p&gt;
&lt;p&gt;[perl]my @array = (teste, tx, px);&lt;/p&gt;
&lt;p&gt;#nesta situação criei um array com 3 elementos separado por &quot;,&quot; que indicam que é outro elemento[/perl]&lt;/p&gt;
&lt;p&gt;[perl]my @array = qw(teste tx pc);&lt;/p&gt;
&lt;p&gt;#desta vez introduzi um conceito novo o qw ao seja ele vai assumir cada palavra como um elemento novo. ATENÇÃO: o qw funciona de forma diferente com prints[/perl]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Para finalizar este artigo vou falar sobre &lt;strong&gt;hash's&lt;/strong&gt; também conhecidas por listas associativas. Ao seja uma numa hash cada item vai ter um valor associado .São variáveis &quot;bidimensionais&quot; porque têm duas listas em que um inclui o valor chave e a outra inclui o valor correspondente.&lt;/p&gt;
&lt;p&gt;Ex:&lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;my %hash = (&quot;linha1&quot; =&amp;gt; &quot;Teste&quot;);&lt;/p&gt;
&lt;p&gt;#o linha1 é a chave e o Teste é o valor associado a essa chave.&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt;De referir que cada chave só pode ter um valor. O exemplo acima demonstra como se pode definir uma hash mas existe outra opção para fazer o mesmo, que é o seguinte:&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;my %hash = (&quot;linha1&quot; , Teste);&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Nota:Tanto para os arrays como para os hash nós podemos aceder a hash/array como um todo ou a uma determinada posição da hash. Atenção tanto uma como outra começa a lista no zero ao seja o primeiro valor tem posição zero.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;E com isto dou por finalizado este artigo .É importante referir que este artigo serviu só para saberem as diferenças e como declararem váriaveis. Num futuro artigo irei falar de como se pode manusear arrays e hashs e de que forma podem ser usadas.&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Jan 2012 22:23:30 +0000</pubDate>
        <link>http://localhost:4000/2012/01/17/perldeclaracao-de-variaveis.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/01/17/perldeclaracao-de-variaveis.html</guid>
        
        
      </item>
    
      <item>
        <title>Script Adb and Linux</title>
        <description>&lt;p&gt;Cada vez mais existem pessoas a utilizar Android e Linux e muitas deles tem dificuldades em por o adb a funcionar com Linux por causa de se ter que configurar regras ou então saber os valores para as coisas. Decidi então criar um pequeno script em perl para agilizar este processo e tornando a vida do pessoal mais fácil quando trabalham com isto.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more-104&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Deixo aqui o código fonte do script e como anexo irei deixar o ficheiro para fazer download e executar.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;[perl]&lt;/p&gt;
&lt;p&gt;#!/usr/bin/perl -w&lt;br /&gt;
#Developer by : Rubem Mota&lt;br /&gt;
#Dont use to earn money and keep all copyrights reserved to me&lt;br /&gt;
#Twitter: @rubemlrm&lt;br /&gt;
use strict;&lt;br /&gt;
chomp(my @rules = (&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;0502&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;413c&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;0489&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;091E&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;0bb4&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;12d1&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;0482&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;1004&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;22b8&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;0955&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;10A9&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;04e8&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;04dd&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;0fce&quot;, MODE=&quot;0666&quot;',&lt;br /&gt;
'SUBSYSTEM==&quot;usb&quot;, SYSFS{idVendor}==&quot;19D2&quot;, MODE=&quot;0666&quot;'&lt;br /&gt;
));&lt;/p&gt;
&lt;p&gt;my @brands = qw (&lt;br /&gt;
Acer&lt;br /&gt;
Dell&lt;br /&gt;
Foxconn&lt;br /&gt;
Garmin-Asus&lt;br /&gt;
HTC&lt;br /&gt;
Huawei&lt;br /&gt;
Kyocera&lt;br /&gt;
LG&lt;br /&gt;
Motorola&lt;br /&gt;
Nvidia&lt;br /&gt;
Pantech&lt;br /&gt;
Samsung&lt;br /&gt;
Sharp&lt;br /&gt;
SonyEricsson&lt;br /&gt;
ZTE&lt;br /&gt;
);&lt;br /&gt;
my $i = 1;&lt;br /&gt;
my $uid = `id -u`;&lt;br /&gt;
#Checking if user is root or not&lt;br /&gt;
if ( $uid != 0 ){&lt;br /&gt;
print &quot;you need root priveleges to run this scriptn&quot;;&lt;br /&gt;
}else{&lt;br /&gt;
#running the import part of script&lt;br /&gt;
print &quot;------------------------------:n&quot;;&lt;br /&gt;
print &quot;:Welcome to Adb rule creator :n&quot;;&lt;/p&gt;
&lt;p&gt;#it will create the list to choose brand&lt;br /&gt;
foreach(@brands){&lt;br /&gt;
print &quot;.&quot;.$i++ .&quot;=&amp;gt;&quot;. $_ .&quot;n&quot;;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;print &quot;:Choose driver brand:n&quot;;&lt;br /&gt;
chomp(my $opt = &lt;STDIN&gt;);&amp;lt;/p&amp;gt;
&lt;p&gt;#condition to check input&lt;/p&gt;
&lt;p&gt;if ($opt =~ /D/){&lt;br /&gt;
print &quot;Invalid Option choose againn&quot;;&lt;br /&gt;
print &quot;:Choose driver brand:n&quot;;&lt;br /&gt;
chomp(my $opt = &lt;STDIN&gt;);&lt;br /&gt;
}&amp;lt;/p&amp;gt;
&lt;p&gt;print &quot;It will be created adb rules to &quot; . $brands[$opt - 1] .&quot;n&quot;;&lt;/p&gt;
&lt;p&gt;#filehandle to create rule&lt;br /&gt;
open(FILE , &quot;&amp;gt;&amp;gt;/etc/udev/rules.d/51-android.rules&quot;);&lt;br /&gt;
print FILE $rules[$opt - 1];&lt;br /&gt;
system(&quot;chmod a+r /etc/udev/rules.d/51-android.rules&quot;);&lt;br /&gt;
close(FILE);&lt;br /&gt;
print &quot;Restarting services&quot;;&lt;br /&gt;
system (&quot;/etc/init.d/udev restart&quot;);&lt;br /&gt;
print &quot;All done&quot;;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/perl]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Depois de fazerem download do script façam:&lt;/p&gt;
&lt;p&gt;[shell]&lt;/p&gt;
&lt;p&gt;chmod +x &lt;nome de=&quot;&quot; ficheiro=&quot;&quot;&gt;&amp;lt;/p&amp;gt;
&lt;p&gt;[/shell]&lt;/p&gt;
&lt;/nome&gt;&lt;/p&gt;&lt;/STDIN&gt;&lt;/p&gt;&lt;/STDIN&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Jan 2012 22:39:39 +0000</pubDate>
        <link>http://localhost:4000/2012/01/04/perlscript-adb-and-linux.html</link>
        <guid isPermaLink="true">http://localhost:4000/2012/01/04/perlscript-adb-and-linux.html</guid>
        
        
      </item>
    
      <item>
        <title>Introdução ao Perl</title>
        <description>&lt;p&gt;Quem já ouviu falar de Perl e quis aprender e depois pensou mas como é que vou aprender isto , ou melhor de que maneira é que vou aprender Perl.E para que serve o Perl. A  pensar nessas questões criei esta rubrica para vos mostrar como fazer algumas coisas. Para que servem algumas funções entre outros aspectos importantes de referir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://seeklogo.com/images/P/PERL-logo-392C2FBE62-seeklogo.com.gif&quot; alt=&quot;&quot; title=&quot;perl&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este artigo vai estar divido em 3 partes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Perl o que é ?&lt;/li&gt;
  &lt;li&gt;O que é necessário para correr perl?&lt;/li&gt;
  &lt;li&gt;Introdução a conceitos básicos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Perl o que é?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A linguagem de programação PERL foi desenvolvida em 1987 por Larry Wall e serviu de base para muitas linguagens modernas de programação , tais como javascript , ruby , etc… O perl é caracterizado por ser uma linguagem de programação amplamente usada por administradores de sistemas , hackers , crackers  e  webdevelopers.Tem os seguintes pontos fortes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Extremamente rápida a trabalhar com strings/arrays/hash’s/regex’s;&lt;/li&gt;
  &lt;li&gt;Corre em mais de 100 plataformas diferentes;&lt;/li&gt;
  &lt;li&gt;Pode ser utilizada para webdevelopment , desempenhando papeis geralmente ocupados por php/asp/etc;&lt;/li&gt;
  &lt;li&gt;Suporte unicode;&lt;/li&gt;
  &lt;li&gt;Actualmente permite programação orientada a objectos e também procedural ;&lt;/li&gt;
  &lt;li&gt;Tem uma enorme comunidade de developers que desenvolvem módulos para agilizar o trabalho dos programadores. Para termos acesso a esses módulos basta ir ao site CPAN.&lt;/li&gt;
  &lt;li&gt;Suporta integração com bases de dados;&lt;/li&gt;
  &lt;li&gt;No entanto é uma linguagem mais orientada para scripting , ao seja pequenos programas para automatizar tarefas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;O que é necessário para correr perl?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para correr o perl nas nossa máquinas é preciso ter o perl instalado , em sistemas *Unix e MacOS o Perl já vem instalado por defeito. Em sistemas Windows basta fazer download da aplicação &lt;a href=&quot;http://strawberryperl.com/&quot; title=&quot;Strawberry Perl&quot;&gt;Strawberry Perl&lt;/a&gt; e instalar e ficarão com o perl instalado no vosso computador.&lt;/p&gt;

&lt;p&gt;Para programarem em Perl eu recomendo o software &lt;a href=&quot;http://padre.perlide.org/&quot; title=&quot;Padre Perl&quot;&gt;Padre Perl&lt;/a&gt; (corre em sistemas Linux e Windows) ou então utilizem o &lt;a href=&quot;http://www.eclipse.org/&quot; title=&quot;Eclipse&quot;&gt;eclipse&lt;/a&gt; com o plugin &lt;a href=&quot;http://www.epic-ide.org/&quot; title=&quot;EPIC IDE&quot;&gt;Epic IDE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introdução aos conceitos básicos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E finalmente chegamos a parte mais pratica deste artigo. Aqui irei mostrar como criar um programa que imprime uma mensagem para o ecrã e outro que vos irá pedir o nome e imprimir uma mensagem de boas vindas. Então mãos a obra. Depois de abrirem o vosso IDE. Escrevam o seguinte e guardem o ficheiro como helloworld.pl . De referir o .pl refere-se a extensão que os scripts em perl tem. Então depois de copiarem este pequeno script façam executar no vosso IDE para verem o resultado.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl
&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bem vindos ao Perl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agora começam a pensar mas então o que e que e cada coisa que está ali .Para mim parece chinês use isto , print aquilo .Bem é bastante fácil de entender  e irei explicar passo a passo cada coisa para que vocês fiquem a perceber tudo.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Esta linha é bastante importante , é logo a primeira linha a ser escrita e não pode ter espaços nem ficar na segunda linha do script porque senão irá dar erro. Quando um interpretador executa um ficheiro perl , ele tem que saber que o ficheiro em questão é um ficheiro perl e que tipo de interpretador e que tem usar e nesta linha nós indicamos isso.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nesta situação usamos 2 pragmas , um pragma é uma extensão ao programa. Ao seja vamos incluir funções que não vem por defeito num script. Para tal temos que usar a função &lt;strong&gt;use&lt;/strong&gt; seguida do nome do pragma. Neste caso usei o pragma warnings e strict. O pragma warnings é responsável por nos avisar de possíveis erros de sintaxe ou mesmo de programação. Enquanto que o pragma Strict permite uma melhor organização e estrutura a nível de sintaxe , declaração de variáveis , procedimentos , etc.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bem vindos ao Perl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por fim a função &lt;strong&gt;print&lt;/strong&gt; , esta função irá imprimir para o ecrã aquilo que declaramos.&lt;/p&gt;

&lt;p&gt;Agora iremos criar um pequeno programar que irá pedir o nome de utilizador e imprimir uma mensagem de boas vindas no ecrã.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl
&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Introduza o seu nomen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bem vindos ao Perl &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&quot;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Neste script introduzi 5 funções novas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;my&lt;/strong&gt;: Esta função é usada para declarar qualquer tipo de variáveis. Mas a sua utilização só e obrigatória se tivermos usado o pragma strict. Caso não tenhamos usado só é obrigatório utilizar dentro de funções(mas isso fica para outro tutorial ;) );&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$nome:&lt;/strong&gt; é a nossa variável , para se declarar uma variável usa-se o simbolo &lt;strong&gt;$&lt;/strong&gt; ;&lt;/li&gt;
  &lt;li&gt;: Esta função é utilizada para ler o que é introduzido pelo teclado.Ao estarmos a igual a variavel $nome a esta função , estamos a dizer que a variável nome ira ter o valor do &lt;stdin&gt;;&lt;/stdin&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;n&lt;/strong&gt; : usando esta expressão num &lt;strong&gt;print&lt;/strong&gt; iremos dizer ao programa que depois de imprimir o conteúdo do print deverá criar um nova linha(carregar no enter) ;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;chomp&lt;/strong&gt; : esta função é das mais importantes que se podem utilizar , visto que elimina os n de todos os valores da variável que queremos.&lt;/li&gt;
  &lt;li&gt;Por fim no print chama-mos a variável $nome e ira imprimir o seu valor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Já agora fica uma pequena dica ;)&lt;/p&gt;

&lt;p&gt;Em vez de fazerem isto :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Podem fazer logo isto :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt;/stdin&amp;gt;&lt;/p&gt;

&lt;p&gt;Que alem de deixar o código mais organizado , agiliza a escrita de código.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Dec 2011 17:14:24 +0000</pubDate>
        <link>http://localhost:4000/development/perl/tutorial/2011/12/30/perlintroducao-ao-perl.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/perl/tutorial/2011/12/30/perlintroducao-ao-perl.html</guid>
        
        
        <category>development</category>
        
        <category>perl</category>
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>Auto-Join Script para Mirc</title>
        <description>&lt;p&gt;Este é um exemplo para criar um script para fazer auto join no irc.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;on &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:START:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    .server chat.eu.freenode.net &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
    .server &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; irc.network &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;esta é a sintaxe que você tem que usar para utilizar este script para outras redes.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

on &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:NOTICE:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;This nickname is registered and protected&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; freenode &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        .msg nickserv IDENTIFY &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    elseif &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        .msg nickserv IDENTIFY &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

on &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:NOTICE:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Password accepted&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; freenode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;join&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    elseif &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;join&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agora irei explicar este script:&lt;/p&gt;

&lt;p&gt;1ª Parte :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;on &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:START:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    .server freenode &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
    .server &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; irc.network &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;esta é a sintaxe que você tem que usar para utilizar este script para outras redes.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nesta parte definimos a que redes é que queremos que o script se ligue. Mas atenção a 2 factores importantes:
-Não esquecer the usar o argumento “-m” no caso de utilizarmos o script para nos ligarmos a várias redes.&lt;/p&gt;

&lt;p&gt;2ª Parte:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;on &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:NOTICE:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;This nickname is registered and protected&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; Freenode &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        .msg nickserv IDENTIFY &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    elseif &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        .msg nickserv IDENTIFY &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Neste parte realizamos a identificação do nick .E caso queiram ter várias sessões na mesma rede podem usar um “else if”.&lt;/p&gt;

&lt;p&gt;3ª Parte:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;on &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:NOTICE:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Password accepted&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; freenode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;join&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; elseif &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; NickServ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$network&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;join&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por fim depois de ter identificado o nick , irá entrar nos canais que definiu.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2011 21:24:35 +0100</pubDate>
        <link>http://localhost:4000/irc/dicas/2011/09/14/mircauto-join-script.html</link>
        <guid isPermaLink="true">http://localhost:4000/irc/dicas/2011/09/14/mircauto-join-script.html</guid>
        
        
        <category>irc</category>
        
        <category>dicas</category>
        
      </item>
    
      <item>
        <title>Cron e crontab o que são ? E para que servem?</title>
        <description>&lt;p&gt;Certamente muitos de vós já se depararam com estes 2 termos e questionaram-se sobre o que seriam e que função desempenhavam .Ambos são processos que são exclusivos de sistemas UNIX ou seja linux e openbsd entre outros.&lt;/p&gt;

&lt;p&gt;O crontab serve de  arquivo para as tarefas que queremos que sejam automatizadas como por exemplo: fazer backups , apagar ficheiros , corrigir erros do sistema , actualizar o sistema, entre outras coisas. Enquanto que o Cron vai utilizar esse arquivo e vai verificar de x em x tempo se a tarefa já foi executada ou ainda está a ser executada e verifica também a quanto tempo foi executada. Caso ainda não tenha sido executada o cron irá executar essa tarefa de forma autónoma e irá ter o nome de cronjob. De referir que é tudo executado na shell do sistema (terminal).&lt;/p&gt;

&lt;p&gt;Dito assim pode parecer muito confuso mas tentarei elucidar-vos melhor sobre isto com um caso concreto. Imaginem que querem que um script seja executado de meia em meia hora , script esse que irá fazer backup de uma pasta que vocês queiram .Para tal tem-se que “dizer” ao cron que de X em X tempo o script em questão tem que ser executado e o cron pega nessa informação e guarda-a num ficheiro crontab e a partir desse momento , o cron irá verificar de x em x tempo se o script está a ser executado ou não. Senão estiver irá executa-lo , caso esteja já a ser executado o cron não vai fazer nada alem de continuar a “vigiar” essa tarefa para o caso de alguma anomalia a afectar e então o cron volta a executa-la.&lt;/p&gt;

&lt;p&gt;Existem 2 formas de o cron actuar:&lt;/p&gt;

&lt;p&gt;-Global;&lt;/p&gt;

&lt;p&gt;-Local.&lt;/p&gt;

&lt;p&gt;No caso da global é o root do sistema que define na crontab o que tem se verificar e fazer. E aplica-se a todos os utilizadores.&lt;/p&gt;

&lt;p&gt;Enquanto que na global o cron apenas irá actuar na conta do utilizador que o criou.&lt;/p&gt;

&lt;p&gt;Para configurar um crontab para um utilizador usa-se a seguinte sintaxe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-l utilizador – lista as tarefas agendadas para utilizador&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;-e utilizador – Edita o crontab&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;-r utilizador – apaga o crontab do utilizador&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;-c directoria  – especifica um directoria para o Crontab&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para verificar todos os crontabs de um utilizador basta ver esta directoria:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/spool/cron/utilizador&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;E para editar os crontabs globais basta editar este ficheiro &lt;strong&gt;“/etc/crontab“&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;Agora que falamos do que é cada coisa vou passar a explicar a sintaxe de um crontab. A sintaxe dos crontabs é divida em 6 partes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Minuto:&lt;/strong&gt;que tem valores entre 0 e 59;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hora :&lt;/strong&gt; que tem valores entre 0 e 23;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dia :&lt;/strong&gt; 1-31&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mês :&lt;/strong&gt; 1-12&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dia da Semana :&lt;/strong&gt; 0-7/Sun-Sat , o 0 e o 7 representam o domingo;&lt;/li&gt;
  &lt;li&gt;Comando a ser executado.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por exemplo se quisermos que um determinado script seja executado todos os dias as 16horas basta fazer isto:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0 16 * * * /home/dev/backup.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pode-se complementar isto usando os caracteres especiais que permitem definir mais condições no que é para ser feito:&lt;/p&gt;

&lt;p&gt;-&lt;strong&gt;Asterisco(*):&lt;/strong&gt; com este carácter indicamos que serão seleccionados todos os valores do campo em que foi usado , ao seja se usarmos o ** no campo horas significa que o cron vai ser executados em todas as horas.**&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Barra ( / ):&lt;/strong&gt; com este carácter indicamos que o cron será executado consoante o que é definido pela sintax: “/..” , por exemplo se especificar isto no campo horas 59/2 significa que o cron vai ser executado duas vezes por cada hora;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Virgula( , )&lt;/strong&gt;: com este carácter separamos vários itens da lista como por ex : “1,2,3” neste caso estamos a definir os meses Janeiro , Fevereiro, Março;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-hífen( - ):&lt;/strong&gt; Com este carácter definimos uma range de valores por exemplo: 15-23, neste caso definimos todas as horas entre as 15horas e as 23horas;&lt;/p&gt;

&lt;p&gt;-&lt;strong&gt;Ponto de interrogação(?):&lt;/strong&gt;Com este carácter podemos omitir a especificação do dia do mes e do dia da semana. Atenção que só pode ser utilizado num dos campos;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-L&lt;/strong&gt;: o L tem como função identificar que o cron só executado no ultimo valor do campo especificado , no caso dos dias será no valor 7(Domingo);&lt;/p&gt;

&lt;p&gt;-&lt;strong&gt;W:&lt;/strong&gt; O W só é utilizado no campo “dia da semana” ao seja se indicarmos o valor “w28” o cron só irá ser executado no dia da semana mais perto do valor do dia do mês. Atenção sabado e domingo não são considerados dias úteis(dias da semana)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-cardinal(#): &lt;/strong&gt;Este carácter só pode ser utilizado no campo dia da semana e tem que ser procedido por um número que vai indicar o dia da semana em que vai ser executado , se tivermos isto : #4 indica que vai executado na segunda quinta-feira de cada mês.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2011 20:57:11 +0100</pubDate>
        <link>http://localhost:4000/linux/2011/09/14/cron-e-crontab-o-que-sao-e-para-que-servem.html</link>
        <guid isPermaLink="true">http://localhost:4000/linux/2011/09/14/cron-e-crontab-o-que-sao-e-para-que-servem.html</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>Hello World em Python</title>
        <description>&lt;p&gt;Muitos de vós já ouviram falar de python e tiveram curiosidade em saber como programar em python. E com este artigo vou explicar algumas coisas de python mas apenas coisas básicas.&lt;/p&gt;

&lt;p&gt;E como tal vou utilizar o tão conhecido “Hello World” que é o programa da praxe em todas as linguagens de programação.&lt;/p&gt;

&lt;p&gt;Antes de começar-mos a programar em python temos que instalar o software necessário.Para isso basta ir ao site da &lt;a href=&quot;http://www.python.org/download/&quot;&gt;Python&lt;/a&gt;  e fazerem download da aplicação para os vossos sistemas operativos.Caso utilizem Linux/Unix já devem trazer instalado o python para tal basta abrir o terminal e escrever “python” se der erro é porque não está instalado e terão que seguir as informações de instalação para o vosso sistema.&lt;/p&gt;

&lt;p&gt;De referir que podem criar programas em python em programas como o notepadd ++ mas não o poderão executar senão tiverem o python instalado no pc.&lt;/p&gt;

&lt;p&gt;Agora vamos passar para a programação propriamente dita.
Imaginem que querem que o programa imprima alguma coisa no ecrã quando é executado , para tal basta escreverem isto no ficheiro do vosso programa:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bom dia pessoal&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;No exemplo acima demonstrado temos 2 coisas que é importante referir:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;print&lt;/strong&gt; -&amp;gt; com este comando vamos imprimir variáveis/frases para o ecrã ;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“Bom dia pessoal”&lt;/strong&gt; -&amp;gt; A string que vai ser impressa , atenção que têm que estar entre &lt;strong&gt;” “&lt;/strong&gt;;&lt;/p&gt;

&lt;p&gt;Até aqui não há grandes dúvidas da simplicidade do python , mas agora vamos dinamizar um bocado o nosso código de forma a que passe a ler aquilo que o utilizador introduz. Para tal temos que utilizar a seguinte sintax:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Qual é o seu nome?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Neste exemplo estamos a declarar que a variavel que neste caso é o &lt;strong&gt;“nome”&lt;/strong&gt; vai ter o valor que for adquirido com o &lt;strong&gt;“raw_input”&lt;/strong&gt;.
O &lt;strong&gt;“raw_input”&lt;/strong&gt; irá ler e guardar a informação que o utilizador escreveu quando respondeu ao que se perguntava/pedia na &lt;strong&gt;”(“Qual é o seu nome?”)”.&lt;/strong&gt;
Atenção que o nome da variável que ira ser utilizada na ultima parte tem que ser igual a variavel que iniciamos , ao seja se dissermos que a variável &lt;strong&gt;x&lt;/strong&gt; é igual ao raw input da pergunta y , essa pergunta tem que ter um campo &lt;strong&gt;x&lt;/strong&gt; porque senão o que introduzirmos não vai ser associado.&lt;/p&gt;

&lt;p&gt;Agora iremos pegar nos dois exemplos acima demonstrados e vamos criar um pequeno script que vai perguntar o nome e posteriormente irá imprimir uma frase com o nome que foi introduzido.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Qual é o seu nome? : &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Ola &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; é um prazer conhece-lo.&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ao verem este exemplo poderão estranhar o que fazem ali os “+” bem o “+” é um símbolo de concatnação que une várias strings para formar uma “compound string”.De referir ainda que em nenhum dos exemplos definimos o tipo de variável que iríamos utilizar.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2011 20:56:39 +0100</pubDate>
        <link>http://localhost:4000/python/development/dicas/2011/09/14/pythonhello-world.html</link>
        <guid isPermaLink="true">http://localhost:4000/python/development/dicas/2011/09/14/pythonhello-world.html</guid>
        
        
        <category>python</category>
        
        <category>development</category>
        
        <category>dicas</category>
        
      </item>
    
      <item>
        <title>Palestra sobre desenvolvimento em android na ESTG</title>
        <description>&lt;p&gt;Praticamente uma semana depois da realização desta palestra , finalmente tive tempo para fazer um pequeno resumo do que se passou e de como correu.&lt;/p&gt;

&lt;p&gt;Apesar de um breve atraso no inicio da palestra devido a problemas técnicos iniciou-se o inicio da palestra comigo a falar sobre versões de android e suas inovações e dicas sobre como trabalhar como o GIT. No meu ver a minha parte até correu bem.
As partes que gostei mais na palestra foram a palestra sobre OpenGL e sobre Rom development onde deu para aprender muita coisa que nunca se vai aprender na escola e que me fez despertar um interesse em rom development e ainda me levou a querer aprender ainda mais de programação.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Dev:&lt;/strong&gt;
Coisas como motores gráficos e NDK fizeram-me ver que aquilo que eu tinha feito para a PAT em rpg maker VX não foi nada por ai alem e que ainda tenho muito que aprender sobre a área de game dev. Com esta palestra vi que nem sempre a ideia mais complicada é a melhor e que se podem criar jogos muito interessantes sem recorrer a grande histórias de jogo.
Uma coisa que achei muito interessante foi o que é preciso para desenvolver um motor de jogo , desde as leis da física , a optimização de código e previsões de embate do objecto que criamos no jogo.
A criação de um jogo a nível visual é muito fácil bastando para isso criar 3 variaveis:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Mundo:&lt;/li&gt;
  &lt;li&gt;Objecto que controlamos;&lt;/li&gt;
  &lt;li&gt;Zonas de impacto&lt;/li&gt;
  &lt;li&gt;Fundo para dar .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Posteriormente a esta etapa tem que se definir em que é que o jogo vai consistir ao seja o guião do jogo .E aqui definimos o que é que para se fazer no jogo , desde quests , noiveis , personagens , etc.&lt;/p&gt;

&lt;p&gt;Por fim a parte mais desafiante juntar isto tudo e criar um jogo com tudo o que planeamos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rom dev:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Este foi sem sombra de dúvidas o tema que me interessou mais. Já a algum tempo que gostava de aprender como criar uma ROM e sempre pensei que fosse impossível para quem não percebesse muito de C ou outras .Mas acabei por ver que não é assim tão difícil e que já existem muitas ferramentas que ajudam neste trabalho .No entanto é preciso conhecer termos como boot.img , root , init.rc , kernel etc e saber o que cada um faz. Uma das formas mais básicas de criar uma custom ROM é pegar numa já existente e fazer pequenas alterações , como adicionar e remover apk’s que estejam na pasta /system , criar um theme só nosso , alterar velocidades de clock do CPU , splash screens etc.E depois compilar tudo para criar uma ROM.
E vocês pensam agora mas é assim tão simples quanto isso ??Bem na teoria sim mas na prática é preciso ter alguns cuidados como não alterar definições importantes do sistema porque poderam ficar com o dispositivo inóperavel.
A outra maneira que existe para se criar uma rom é from the source ao seja adquirimos o source do android e começamos a construir a nossa rom totalmente da nossa autoria, mas nesta situação já é necessário conhecimentos de programação mais avançados , visto que se mexe com kernel dev , drivers dev entre outras coisas, e a quantidade de bugs que vão existir logo de inicio. Mas o importante é não desanimar .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Theme Dev&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Possivelmente o tema mais acessivel que falou nesta palestra visto que se torna muito fácil alterar themes , alias nunca pensei que fosse tão fácil. Foi interessante ver as ferramentas que se utilizam.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APN Portugal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi feita uma pequena demonstração do funcionamento da mesma a nível de utilizador final e de aspectos importante relativamente a como identificar a que rede se pertence.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2011 20:55:19 +0100</pubDate>
        <link>http://localhost:4000/android/palestra/2011/09/14/palestra-sobre-desenvolvimento-em-android-na-estg.html</link>
        <guid isPermaLink="true">http://localhost:4000/android/palestra/2011/09/14/palestra-sobre-desenvolvimento-em-android-na-estg.html</guid>
        
        
        <category>android</category>
        
        <category>palestra</category>
        
      </item>
    
      <item>
        <title>Inicio do meu blog</title>
        <description>&lt;p&gt;Começar por me apresentar .Bem chamo-me Rubem Mota , nome invulgar diga-se de passagem.Tenho o curso de técnológico de informática ,e sou um ávido fã de musica , desportos radicais , bombeiros ,música , anime , Magic the gathering.E nos ultimos tenho despertado um interesse para programação que começou a aparecer durante o curso mas depois de sair do curso se desvaneceu.&lt;/p&gt;

&lt;p&gt;Quero usar este blog como portfólio , diário de teorias e ideias , tutorias , noticias , artigos sobre várias áreas entre outras coisas .&lt;/p&gt;

&lt;p&gt;E assim concluo a minha apresentação.&lt;/p&gt;

&lt;p&gt;Cumps&lt;/p&gt;

&lt;p&gt;Rubem Mota&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2011 20:53:05 +0100</pubDate>
        <link>http://localhost:4000/2011/09/14/inicio-do-meu-blog.html</link>
        <guid isPermaLink="true">http://localhost:4000/2011/09/14/inicio-do-meu-blog.html</guid>
        
        
      </item>
    
    
      <item>
        <title>Weddar</title>
        <description>Weddar</description>
        <link>http://localhost:4000https://www.weddar.com/</link>
        <pubDate>Fri, 01 Apr 2011 00:00:00 +0100</pubDate>
        
        <category>Android</category>
        
      </item>
    
      <item>
        <title>JfSMamede</title>
        <description>JfSMamede</description>
        <link>http://localhost:4000#</link>
        <pubDate>Sat, 01 Jun 2013 00:00:00 +0100</pubDate>
        
        <category>Laravel</category>
        
        <category>Mysql</category>
        
      </item>
    
      <item>
        <title>Mosel</title>
        <description>Mosel</description>
        <link>http://localhost:4000#</link>
        <pubDate>Sat, 01 Jun 2013 00:00:00 +0100</pubDate>
        
        <category>Linux</category>
        
        <category>SideProject</category>
        
      </item>
    
      <item>
        <title>Hotel Fátima</title>
        <description>Hotel Fátima</description>
        <link>http://localhost:4000http://www.hotelfatima.pt/</link>
        <pubDate>Thu, 01 Jan 1970 01:33:34 +0100</pubDate>
        
        <category>yii-framework</category>
        
        <category>mysql</category>
        
        <category>bootstrap</category>
        
      </item>
    
      <item>
        <title>Ferbio</title>
        <description>Ferbio</description>
        <link>http://localhost:4000http://www.ferbio.pt/</link>
        <pubDate>Thu, 01 Jan 1970 01:33:34 +0100</pubDate>
        
        <category>Laravel</category>
        
        <category>Mysql</category>
        
        <category>Api</category>
        
      </item>
    
      <item>
        <title>Hotel Dom Gonçalo</title>
        <description>Hotel Dom Gonçalo</description>
        <link>http://localhost:4000hoteldg.com</link>
        <pubDate>Thu, 01 Jan 1970 01:33:33 +0100</pubDate>
        
        <category>Laravel</category>
        
        <category>Mysql</category>
        
      </item>
    
  </channel>
</rss>
